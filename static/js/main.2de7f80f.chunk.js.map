{"version":3,"sources":["simple.js","wasm-build/libsnpspice.js","App.tsx","reportWebVitals.js","index.js"],"names":["addDefineSimpleMode","CodeMirror","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","Rule","data","next","push","this","regex","token","apply","replace","result","i","length","asToken","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","start","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indentFunction","meta","textAfter","line","dontIndentStates","arr","indexOf","Pass","rules","scan","dedentIfLineStart","slice","defineSimpleMode","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode","wasm","heap","Array","fill","undefined","getObject","idx","heap_next","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","cachegetUint32Memory0","getUint32Memory0","Uint32Array","WASM_VECTOR_LEN","_assertNum","n","cachegetInt32Memory0","getInt32Memory0","Int32Array","perform_simulation","description","net_count","duration","clock_divider","retptr","__wbindgen_add_to_stack_pointer","ptr0","arg","malloc","set","passArray32ToWasm0","__wbindgen_malloc","len0","r0","r1","v1","__wbindgen_free","get_indices","v0","logError","f","args","e","error","message","toString","_","console","addHeapObject","obj","cachedTextEncoder","TextEncoder","encodeString","encodeInto","view","buf","encode","read","written","passStringToWasm0","realloc","mem","offset","code","charCodeAt","load","module","imports","Response","WebAssembly","instantiateStreaming","headers","get","warn","arrayBuffer","bytes","instantiate","instance","Instance","init","input","wbg","__wbg_error_4bb6c2a97407129a","arg0","arg1","arguments","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","__wbindgen_realloc","__wbindgen_object_drop_ref","__wbindgen_throw","Request","URL","fetch","exports","__wbindgen_wasm_module","wasmInitialized","process","then","init_panic_hook","builtinRead","x","Sk","window","builtinFiles","require","RawCodeMirror","comment","lineComment","UnionFind","weights","Map","parents","k","has","path","root","node","keys","roots","map","canonicalize","totalWeight","heaviest","heaviestWeight","weight","renderTraces","simResults","grading","height","probes","svgContents","probeIndex","probe","forwardPass","backwardPass","shootThroughStart","trace","netTraces","net","traceVal","yMin","yMax","reverse","transform","y","stroke","label","d","strokeWidth","errorX","failureTime","style","width","success","textAnchor","miniMessage","persistLevelState","levelInternalName","levelState","localStorage","setItem","JSON","stringify","metadata","doGrading","tracesToGrade","netName","reqs","time","value","mapping","0","1","2","got","wanted","globalLevelsList","internalName","levelDesc","startingCode","makeInputNets","components","kind","pattern","repeat","makeOutputNets","gradeResults","App","levelStates","onCompile","pre","results","nextId","getId","builtins","vdd","ffi","remapToPy","gnd","new_net","remapToJs","co_varnames","$defaults","co_numargs","nfet","gate","drain","isPfet","pfet","pull_down_resistor","direction","pull_up_resistor","wire_together","net1","net2","nets","signal","toLowerCase","endsWith","c","get_level_inputs","currentLevel","get_level_outputs","configure","output","misceval","asyncToPromise","importMainWithBody","mod","setState","terminalOutput","simulate","err","loadLevelStatesFromLocalStorage","page","simOutput","onpopstate","event","level","parse","getItem","lineNum","lineOfCode","split","Set","netCanonicalizer","component","add","union","descArray","netIndices","canonicalizedNet","size","traceValues","traceIndices","traces","shootThroughOccurred","earliestShootThrough","Infinity","t","Math","min","everBeaten","everOpened","history","pushState","locked","color","fontFamily","display","justifyContent","textAlign","fontSize","marginTop","flexDirection","margin","padding","position","className","onClick","switchToLevel","left","top","bottom","right","confirm","clear","forceUpdate","vertSplitDefault","parseInt","horizSplitDefault","minSize","defaultSize","onChange","resizerStyle","background","cursor","options","theme","lineNumbers","lineWrapping","extraKeys","cm","onBeforeChange","editor","userSelect","zIndex","opacity","backgroundColor","whiteSpace","React","PureComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2de7f80f.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Hacked briefly by Peter Schmidt-Nielsen to make it easily requireable.\n\nexport function addDefineSimpleMode(CodeMirror) {\n    \"use strict\";\n  \n    CodeMirror.defineSimpleMode = function(name, states) {\n      CodeMirror.defineMode(name, function(config) {\n        return CodeMirror.simpleMode(config, states);\n      });\n    };\n  \n    CodeMirror.simpleMode = function(config, states) {\n      ensureState(states, \"start\");\n      var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n      for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n        var list = states_[state] = [], orig = states[state];\n        for (var i = 0; i < orig.length; i++) {\n          var data = orig[i];\n          list.push(new Rule(data, states));\n          if (data.indent || data.dedent) hasIndentation = true;\n        }\n      }\n      var mode = {\n        startState: function() {\n          return {state: \"start\", pending: null,\n                  local: null, localState: null,\n                  indent: hasIndentation ? [] : null};\n        },\n        copyState: function(state) {\n          var s = {state: state.state, pending: state.pending,\n                   local: state.local, localState: null,\n                   indent: state.indent && state.indent.slice(0)};\n          if (state.localState)\n            s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n          if (state.stack)\n            s.stack = state.stack.slice(0);\n          for (var pers = state.persistentStates; pers; pers = pers.next)\n            s.persistentStates = {mode: pers.mode,\n                                  spec: pers.spec,\n                                  state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                  next: s.persistentStates};\n          return s;\n        },\n        token: tokenFunction(states_, config),\n        innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n        indent: indentFunction(states_, meta)\n      };\n      if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n        mode[prop] = meta[prop];\n      return mode;\n    };\n  \n    function ensureState(states, name) {\n      if (!states.hasOwnProperty(name))\n        throw new Error(\"Undefined state \" + name + \" in simple mode\");\n    }\n  \n    function toRegex(val, caret) {\n      if (!val) return /(?:)/;\n      var flags = \"\";\n      if (val instanceof RegExp) {\n        if (val.ignoreCase) flags = \"i\";\n        val = val.source;\n      } else {\n        val = String(val);\n      }\n      return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n    }\n  \n    function asToken(val) {\n      if (!val) return null;\n      if (val.apply) return val\n      if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n      var result = [];\n      for (var i = 0; i < val.length; i++)\n        result.push(val[i] && val[i].replace(/\\./g, \" \"));\n      return result;\n    }\n  \n    function Rule(data, states) {\n      if (data.next || data.push) ensureState(states, data.next || data.push);\n      this.regex = toRegex(data.regex);\n      this.token = asToken(data.token);\n      this.data = data;\n    }\n  \n    function tokenFunction(states, config) {\n      return function(stream, state) {\n        if (state.pending) {\n          var pend = state.pending.shift();\n          if (state.pending.length == 0) state.pending = null;\n          stream.pos += pend.text.length;\n          return pend.token;\n        }\n  \n        if (state.local) {\n          if (state.local.end && stream.match(state.local.end)) {\n            var tok = state.local.endToken || null;\n            state.local = state.localState = null;\n            return tok;\n          } else {\n            var tok = state.local.mode.token(stream, state.localState), m;\n            if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n              stream.pos = stream.start + m.index;\n            return tok;\n          }\n        }\n  \n        var curState = states[state.state];\n        for (var i = 0; i < curState.length; i++) {\n          var rule = curState[i];\n          var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n          if (matches) {\n            if (rule.data.next) {\n              state.state = rule.data.next;\n            } else if (rule.data.push) {\n              (state.stack || (state.stack = [])).push(state.state);\n              state.state = rule.data.push;\n            } else if (rule.data.pop && state.stack && state.stack.length) {\n              state.state = state.stack.pop();\n            }\n  \n            if (rule.data.mode)\n              enterLocalMode(config, state, rule.data.mode, rule.token);\n            if (rule.data.indent)\n              state.indent.push(stream.indentation() + config.indentUnit);\n            if (rule.data.dedent)\n              state.indent.pop();\n            var token = rule.token\n            if (token && token.apply) token = token(matches)\n            if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n              state.pending = [];\n              for (var j = 2; j < matches.length; j++)\n                if (matches[j])\n                  state.pending.push({text: matches[j], token: rule.token[j - 1]});\n              stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n              return token[0];\n            } else if (token && token.join) {\n              return token[0];\n            } else {\n              return token;\n            }\n          }\n        }\n        stream.next();\n        return null;\n      };\n    }\n  \n    function cmp(a, b) {\n      if (a === b) return true;\n      if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n      var props = 0;\n      for (var prop in a) if (a.hasOwnProperty(prop)) {\n        if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n        props++;\n      }\n      for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n      return props == 0;\n    }\n  \n    function enterLocalMode(config, state, spec, token) {\n      var pers;\n      if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n        if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n      var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n      var lState = pers ? pers.state : CodeMirror.startState(mode);\n      if (spec.persistent && !pers)\n        state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n  \n      state.localState = lState;\n      state.local = {mode: mode,\n                     end: spec.end && toRegex(spec.end),\n                     endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                     endToken: token && token.join ? token[token.length - 1] : token};\n    }\n  \n    function indexOf(val, arr) {\n      for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n    }\n  \n    function indentFunction(states, meta) {\n      return function(state, textAfter, line) {\n        if (state.local && state.local.mode.indent)\n          return state.local.mode.indent(state.localState, textAfter, line);\n        if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n          return CodeMirror.Pass;\n  \n        var pos = state.indent.length - 1, rules = states[state.state];\n        scan: for (;;) {\n          for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i];\n            if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n              var m = rule.regex.exec(textAfter);\n              if (m && m[0]) {\n                pos--;\n                if (rule.next || rule.push) rules = states[rule.next || rule.push];\n                textAfter = textAfter.slice(m[0].length);\n                continue scan;\n              }\n            }\n          }\n          break;\n        }\n        return pos < 0 ? 0 : state.indent[pos];\n      };\n    }\n  };\n  \n","\nlet wasm;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nexport function init_panic_hook() {\n    wasm.init_panic_hook();\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction _assertNum(n) {\n    if (typeof(n) !== 'number') throw new Error('expected a number argument');\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {Uint32Array} description\n* @param {number} net_count\n* @param {number} duration\n* @param {number} clock_divider\n* @returns {Uint8Array}\n*/\nexport function perform_simulation(description, net_count, duration, clock_divider) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray32ToWasm0(description, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertNum(net_count);\n        _assertNum(duration);\n        _assertNum(clock_divider);\n        wasm.perform_simulation(retptr, ptr0, len0, net_count, duration, clock_divider);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction getArrayU32FromWasm0(ptr, len) {\n    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n/**\n* @returns {Uint32Array}\n*/\nexport function get_indices() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.get_indices(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v0 = getArrayU32FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4);\n        return v0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction logError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    if (typeof(heap_next) !== 'number') throw new Error('corrupt heap');\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (typeof(arg) !== 'string') throw new Error('expected a string argument');\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n        if (ret.read !== arg.length) throw new Error('failed to pass whole string');\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n// Line deleted.\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_error_4bb6c2a97407129a = function() { return logError(function (arg0, arg1) {\n        try {\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(arg0, arg1);\n        }\n    }, arguments) };\n    imports.wbg.__wbg_new_59cb74e423758ede = function() { return logError(function () {\n        var ret = new Error();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_stack_558ba5917b466edd = function() { return logError(function (arg0, arg1) {\n        var ret = getObject(arg1).stack;\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    }, arguments) };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;\n\n","import React from 'react';\nimport './App.css';\nimport { Controlled as ControlledCodeMirror } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/python/python';\nimport RawCodeMirror from 'codemirror';\nimport SplitPane from 'react-split-pane';\nimport Collapsible from 'react-collapsible';\n\nimport init, {\n  get_indices,\n  perform_simulation,\n  init_panic_hook,\n} from './wasm-build/libsnpspice.js';\n\nlet wasmInitialized = false;\nlet wasm = init(process.env.PUBLIC_URL + \"/libsnpspice_bg.wasm\")\n  .then(() => {\n    wasmInitialized = true;\n    init_panic_hook();\n  });\n\ninterface ECompFet {\n  kind: 'fet';\n  isPfet: boolean;\n  gate: string;\n  drain: string;\n  source: string;\n}\n\ninterface EPullResistor {\n  kind: 'pull_resistor';\n  direction: 'up' | 'down';\n  net: string;\n}\n\ninterface EProbe {\n  kind: 'probe';\n  label: string;\n  net: string;\n}\n\ninterface EWire {\n  kind: 'wire';\n  nets: string[];\n}\n\ninterface EButton {\n  kind: 'button';\n  net: string;\n}\n\ninterface ESignal {\n  kind: 'signal';\n  net: string;\n  pattern: ('0' | '1' | 'z')[];\n  repeat: boolean;\n}\n\ntype EComponent = (\n  ECompFet |\n  EPullResistor |\n  EProbe |\n  EWire |\n  EButton |\n  ESignal\n);\n\n//import createPlotlyComponent from \"react-plotly.js/factory\";\n\n//// Importing plotly is a little bit of a nightmare.\n//// If we just try to directly `import Plot from \"react-plotly.js\"` then webpack runs out of memory trying to build.\n//const Plotly = require('plotly.js/lib/core');\n//Plotly.register([\n//    require('plotly.js/lib/heatmap'),\n//]);\n//const Plot = createPlotlyComponent(Plotly);\n\nfunction builtinRead(x: string) {\n  const Sk = (window as any).Sk;\n  if (Sk.builtinFiles === undefined || Sk.builtinFiles[\"files\"][x] === undefined)\n    throw \"File not found: '\" + x + \"'\";\n  return Sk.builtinFiles[\"files\"][x];\n}\n\nconst pyPrefix = `\nvdd = \"vdd\";\ngnd = \"gnd\";\n\ndef nfet(gate, drain, source):\n  pass\n\ndef pfet(gate, drain, source):\n  pass\n`;\n\nconst startingCode = `# This is \"Python\" (Skulpt).\n# To build up your solution to the puzzle simply call the functions documented below to emit circuit components.\n#\n# You have the following functions:\n#\n#   new_net(name_prefix: Optional[str] = 'net') -> Net\n#     Creates a new unique net, with an optional name prefix.\n#\n#   nfet(gate: Net, drain: Net, source: Optional[Net])\n#     Emits an n-channel FET into the circuit (pulls drain down to source when gate is high).\n#     If the source is omitted it defaults to gnd.\n#     It is a CMOS design rule violation if source can somehow be pulled high.\n#\n#   pfet(gate: Net, drain: Net, source: Optional[Net])\n#     Emits a p-channel FET into the circuit (pulls drain up to source when gate is low).\n#     If the source is omitted it defaults to vdd.\n#     It is a CMOS design rule violation if source can somehow be pulled low.\n#\n#   probe(label: str, net: Net)\n#     Marks the net to be plotted. Has no electrical effect.\n#\n#   wire_together(nets: List[Net])\n#     Electrically connects all of the listed nets.\n#\n#   button(label: Optional[str]) -> Net\n#     Emits a one-terminal push button, and return the button's output net.\n#     When the button is pushed the net is pulled high, and when released pulled low.\n#\n#   signal(pattern: str) -> Net\n#     Emits a signal generator component, and return the generator's output net.\n#     The pattern must be made of 0s, 1s, and zs, and may optionally end with ... to indicate that the pattern should repeat.\n#     If the \n#     The value z indicates that the signal shouldn't drive the output (high Z).\n#     Examples:\n#       clock = signal('01...') # Creates a clock signal that toggles every time step.\n#       output = signal('zzz1z') # Waits three time steps, then drives high, then stops driving forever.\n#\n# The net gnd is always low, and the net vdd is always high.\n\n# Create an inverter.\noutput = new_net()\nclock = signal('01...')\nnfet(clock, output, gnd)\npfet(clock, output, vdd)\nprobe('clock', clock)\nprobe('inverter output', output)\n`\n\nrequire(\"./simple.js\").addDefineSimpleMode(RawCodeMirror);\n\n(RawCodeMirror as any).defineSimpleMode(\"complang\", {\n  start: [\n    // Match strings.\n    { regex: /\"(?:[^\\\\]|\\\\.)*?(?:\"|$)/, token: \"string\" },\n    // Match keywords.\n    { regex: /(?:pfet|nfet|probe|wire|button|signal)\\b/, token: \"keyword\" },\n    // Match initialization and driving.\n    //{regex: /~|<-/, token: \"drive\"},\n    // Match built-ins.\n    { regex: /(?:vdd|gnd)\\b/, token: \"builtin\" },\n    /*\n    {regex: /(?:Slider|Selector|Checkbox|Uniform|Gaussian|Gamma|Beta|Frechet|PoissonProcess|WienerProcess|WienerDerivative|WienerDerivativeUnstable|D|Integrate|exp|log|sin|cos|sqrt|abs|floor|ceil|round|min|max|select|len|str|addDeriv|subDeriv|index_interpolating|print)\\b/, token: \"builtin\"},\n    {regex: /(?:globalTime|globalStepSize|e|pi|true|false|backend|tolerance|stepsize|maxplotpoints|integrator|simtime|minstep|maxstep|mcsamples|mctraces|mcenvelope|randomseed|processscale|mcpercentile|prefix|unitname|redrawperiod|crossoverprob|diffweight|populationsize|maxsteps|patience|patiencefactor|objectiveaggregation)\\b/, token: \"atom\"},\n    */\n    // Match embedded javascript.\n    //{regex: /javascript\\s{/, token: \"meta\", mode: {spec: \"javascript\", end: /}/}},\n    // Match numbers.\n    { regex: /[01]+[.][.][.]/i, token: \"number\" },\n    { regex: /0x[a-f\\d]+|[-+]?(?:\\.\\d+|\\d+\\.?\\d*)(?:e[-+]?\\d+)?/i, token: \"number\" },\n    // Match units.\n    { regex: /`.*`/, token: \"units\" },\n    // Handle comments.\n    { regex: /\\/\\/.*/, token: \"comment\" },\n    //{regex: /\\/\\*/, token: \"comment\", next: \"comment\"},\n    // Match operators.\n    { regex: /[-+\\/*=<>!~]+/, token: \"operator\" },\n    // Match compile-time variables.\n    { regex: /\\$[a-zA-Z_][a-zA-Z0-9_']*/, token: \"compilevar\" },\n    // Match variables.\n    { regex: /[a-zA-Z_][a-zA-Z0-9_']*/, token: \"neutral\" },\n    // Indent and dedent on list/dict literals.\n    { regex: /[\\{\\[\\(]/, indent: true },\n    { regex: /[\\}\\]\\)]/, dedent: true },\n  ],\n  comment: [\n    { regex: /.*?\\*\\//, token: \"comment\", next: \"start\" },\n    { regex: /.*/, token: \"comment\" }\n  ],\n  meta: {\n    dontIndentStates: [\"comment\"],\n    lineComment: \"//\",\n  },\n});\n\nclass UnionFind<Key> {\n  weights = new Map<Key, number>();\n  parents = new Map<Key, Key>();\n\n  canonicalize(k: Key): Key {\n    if (!this.weights.has(k)) {\n      this.weights.set(k, 1);\n      this.parents.set(k, k);\n    }\n\n    const path = [k];\n    let root = this.parents.get(k)!;\n    while (root !== path[path.length - 1]) {\n      path.push(root);\n      root = this.parents.get(root)!;\n    }\n\n    for (const node of path)\n      this.parents.set(node, root);\n    return root;\n  }\n\n  union(...keys: Key[]) {\n    if (keys.length === 0)\n      return;\n    const roots = keys.map((k) => this.canonicalize(k));\n    // Find the heaviest.\n    let totalWeight = 0;\n    let heaviest = null as unknown as Key;\n    let heaviestWeight = 0;\n    for (const root of roots) {\n      const weight = this.weights.get(root)!;\n      totalWeight += weight;\n      if (weight > heaviestWeight) {\n        heaviest = root;\n        heaviestWeight = weight;\n      }\n    }\n    // Reweight and reparent.\n    this.weights.set(heaviest!, totalWeight);\n    for (const root of roots) {\n      if (root !== heaviest) {\n        this.parents.set(root, heaviest);\n      }\n    }\n  }\n}\n\nfunction renderTraces(simResults: ISimResults, grading: IGrading) {\n  const width = 800;\n  const height = 30 * (simResults.probes.length + 1);\n\n  const svgContents = [];\n\n  let probeIndex = 0;\n  const xStep = 5;\n\n  for (const probe of simResults.probes) {\n    const forwardPass: string[] = [];\n    const backwardPass: string[] = [];\n    let i = 0;\n    let shootThroughStart = -1;\n    const trace = simResults.netTraces.get(probe.net)!;\n    for (const traceVal of trace) {\n      const x = 3 + i * xStep;\n      let yMin = 3;\n      let yMax = 27;\n      if (traceVal === 0) {\n      } else if (traceVal === 1) {\n        yMin = yMax = 27;\n      } else if (traceVal === 2) {\n        yMin = yMax = 3;\n      } else if (traceVal === 3) {\n        shootThroughStart = x;\n      }\n      if (i === 0)\n        forwardPass.push(`M ${x} ${yMax}`);\n      else\n        forwardPass.push(`L ${x} ${yMax}`);\n      backwardPass.push(`L ${x} ${yMin}`);\n      i++;\n      if (shootThroughStart >= 0)\n        break;\n    }\n    backwardPass.reverse();\n    backwardPass.push('Z');\n\n    svgContents.push(\n      <g key={probeIndex} transform={`translate(140 ${probeIndex * 30})`}>\n        <text x={-140} y={20} stroke='white' fill='white'>{probe.label}</text>\n        <path\n          d={[...forwardPass, ...backwardPass].join(' ')}\n          stroke='white'\n          strokeWidth={3}\n          fill='rgba(255, 255, 255, 0.3)'\n        />\n        {\n          shootThroughStart !== -1 && <>\n            <path\n              d={`M ${shootThroughStart} 3 L ${shootThroughStart + 110} 3 L ${shootThroughStart + 110} 27 L ${shootThroughStart} 27 Z`}\n              stroke='red'\n              strokeWidth={3}\n              fill='rgba(255, 0, 0, 0.3)'\n            />\n            <text x={shootThroughStart + 5} y={20} stroke='red' fill='red'>Shoot through!</text>\n          </>\n        }\n      </g>\n    );\n    probeIndex++;\n  }\n\n  const errorX = 143 + xStep * grading.failureTime;\n\n  return <svg style={{\n    width: '100%', height,\n  }}>\n    {svgContents}\n    {!grading.success && <>\n      <path\n        d={`M ${errorX} 0 L ${errorX} ${height - 20}`}\n        stroke='red'\n        strokeWidth={2}\n        fill='transparent'\n      />\n      <text textAnchor='middle' x={errorX} y={height - 5} stroke='red' fill='red'>{grading.miniMessage}</text>\n    </>}\n  </svg>;\n}\n\nfunction persistLevelState(levelInternalName: string, levelState: ILevelState) {\n  localStorage.setItem('level-' + levelInternalName + '-meta', JSON.stringify(levelState.metadata));\n  localStorage.setItem('level-' + levelInternalName + '-saved-code', levelState.code);\n}\n\nfunction resetGameState() {\n  localStorage.clear();\n}\n\ninterface ILevel {\n  internalName: string;\n  name: string;\n  levelDesc: string;\n  startingCode: string;\n  makeInputNets: (components: EComponent[]) => any[];\n  makeOutputNets: (components: EComponent[]) => any[];\n  gradeResults: (simResults: ISimResults) => IGrading;\n}\n\nfunction doGrading(\n  simResults: ISimResults,\n  tracesToGrade: { net: string, netName: string, reqs: [number, number][] }[],\n): IGrading {\n  for (const { net, netName, reqs } of tracesToGrade) {\n    const trace = simResults.netTraces.get(net)!;\n    for (const [time, value] of reqs) {\n      if (trace[time] !== value) {\n        const mapping = {0: 'undriven', 1: 'low', 2: 'high'} as any;\n        const got = mapping[trace[time]];\n        const wanted = mapping[value];\n        let message = `${netName} is ${got}, but should have been ${wanted}.`;\n        let miniMessage = `${netName} should be ${wanted}`;\n        return { success: false, failureTime: time, message, miniMessage };\n      }\n    }\n  }\n  return { success: true, failureTime: 0, message: 'All tests passed!', miniMessage: '' };\n}\n\nconst globalLevelsList: ILevel[] = [\n  {\n    internalName: 'fets',\n    name: 'FETs',\n    levelDesc: `Welcome to make-a-processor. In each level you must use FETs to construct a circuit that passes the test. The objective for the level will always be in this box.\n\nYou construct circuits by writing a \"Python\" program in the left pane that emits components. You can run your program by hitting ctrl+enter in the code pane. The program's output will appear in the bottom right pane, and the results of the circuit simulation will appear in the top right page.\n\nTo get a list of components, and to see how to emit them, open up the components pane.\n\nYour goal in this first level is to use two FETs to drive the \\`not_A\\` net to be high when \\`A\\` is low, and vice versa.`,\n    startingCode: `# Your Python code here.\n\n# The nets vdd and gnd are built in, and are always 1 and 0 respectively.\nprobe(\"Power\", vdd)\nprobe(\"Ground\", gnd)\n\nA, = get_level_inputs()\nnot_A, = get_level_outputs()\n\nprobe(\"A\", A)\nprobe(\"¬A\", not_A)\n\n# Hint:\n# nfet(gate, drain, source)\n# pfet(gate, drain, source)\n`,\n    makeInputNets: (components: EComponent[]) => {\n      components.push(\n        { kind: 'signal', net: '_net_A', pattern: [...'01'] as any, repeat: true },\n      );\n      return ['_net_A'];\n    },\n    makeOutputNets: () => ['_net_not_A'],\n    gradeResults: (simResults: ISimResults) => doGrading(simResults, [\n      {\n        net: '_net_not_A',\n        netName: '¬A',\n        reqs: [[7, 2], [17, 1], [27, 2], [37, 1]],\n      }\n    ]),\n  },\n\n  {\n    internalName: 'highz',\n    name: 'High-Z Output',\n    levelDesc: `A component's output is said to be high Z (high impedance) when it isn't driven by the component. In this level you must construct a gated inverter that takes a second \\`output_enable\\` signal. Your gated inverter must drive the output if and only if \\`output_enable\\` is high.\n\nSpecifically, your component's truth table must be:\n\n  A | OE | out\n  -------------\n  0 | 0  |  Z\n  1 | 0  |  Z\n  0 | 1  |  1\n  1 | 1  |  0\n`,\n    startingCode: `A, output_enable = get_level_inputs()\nnot_A, = get_level_outputs()\n\nprobe(\"Output enable\", output_enable)\nprobe(\"A\", A)\nprobe(\"¬A\", not_A)\n`,\n    makeInputNets: (components: EComponent[]) => {\n      components.push(\n        { kind: 'signal', net: '_net_A',             pattern: [...'z01001010'] as any, repeat: false },\n        { kind: 'signal', net: '_net_output_enable', pattern: [...'000011100'] as any, repeat: false },\n      );\n      return ['_net_A', '_net_output_enable'];\n    },\n    makeOutputNets: () => ['_net_not_A'],\n    gradeResults: (simResults: ISimResults) => doGrading(simResults, [\n      {\n        net: '_net_not_A',\n        netName: '¬A',\n        reqs: [[7, 0], [17, 0], [27, 0], [37, 0], [47, 2], [57, 1], [67, 2], [77, 0]],\n      }\n    ]),\n  },\n\n  {\n    internalName: 'logic_gates',\n    name: 'Logic Gates',\n    levelDesc: `We will now create logic gates. Implement `,\n    startingCode: `\ndef not_gate(x):\n    r = new_net()\n    ...\n    return r\n`,\n    makeInputNets: () => ['_net_A', '_net_output_enable'],\n    makeOutputNets: () => ['_net_notA'],\n    gradeResults: (x: any) => ({ success: false, failureTime: 3, message: 'bad', miniMessage: '?' }),\n  },\n  {\n    internalName: 'adder',\n    name: 'Adder',\n    levelDesc: `This is the first level.\nTo open up the documentation press `,\n    startingCode: '# Your code here.\\n',\n    makeInputNets: () => ['_net_A', '_net_output_enable'],\n    makeOutputNets: () => ['_net_notA'],\n    gradeResults: (x: any) => ({ success: false, failureTime: 3, message: 'bad', miniMessage: '?' }),\n  },\n  {\n    internalName: 'flipflops',\n    name: 'Flip-Flops',\n    levelDesc: `This is the first level.\nTo open up the documentation press `,\n    startingCode: '# Your code here.\\n',\n    makeInputNets: () => ['_net_A', '_net_output_enable'],\n    makeOutputNets: () => ['_net_notA'],\n    gradeResults: (x: any) => ({ success: false, failureTime: 3, message: 'bad', miniMessage: '?' }),\n  },\n  {\n    internalName: 'state_machine',\n    name: 'State Machines',\n    levelDesc: `This is the first level.\nTo open up the documentation press `,\n    startingCode: '# Your code here.\\n',\n    makeInputNets: () => ['_net_A', '_net_output_enable'],\n    makeOutputNets: () => ['_net_notA'],\n    gradeResults: (x: any) => ({ success: false, failureTime: 3, message: 'bad', miniMessage: '?' }),\n  },\n  {\n    internalName: 'sram',\n    name: 'SRAM',\n    levelDesc: `This is the first level.\nTo open up the documentation press `,\n    startingCode: '# Your code here.\\n',\n    makeInputNets: () => ['_net_A', '_net_output_enable'],\n    makeOutputNets: () => ['_net_notA'],\n    gradeResults: (x: any) => ({ success: false, failureTime: 3, message: 'bad', miniMessage: '?' }),\n  },\n  {\n    internalName: 'microprocessor',\n    name: 'Microprocessor',\n    levelDesc: `This is the first level.\nTo open up the documentation press `,\n    startingCode: '# Your code here.\\n',\n    makeInputNets: () => ['_net_A', '_net_output_enable'],\n    makeOutputNets: () => ['_net_notA'],\n    gradeResults: (x: any) => ({ success: false, failureTime: 3, message: 'bad', miniMessage: '?' }),\n  },\n];\n\ninterface ISimResults {\n  components: number;\n  nets: string[];\n  netTraces: Map<string, Uint8Array>;\n  probes: EProbe[];\n  shootThroughOccurred: boolean;\n  earliestShootThrough: number;\n}\n\ninterface ILevelState {\n  metadata: {\n    savedVersion: number;\n    everOpened: boolean;\n    everBeaten: boolean;\n  };\n  code: string;\n}\n\ninterface IGrading {\n  success: boolean;\n  failureTime: number;\n  message: string;\n  miniMessage: string;\n}\n\ninterface IAppState {\n  page: 'level-select' | 'level';\n  currentLevel: ILevel;\n  code: string;\n  terminalOutput: string;\n  simOutput: string;\n  simResults: null | ISimResults;\n  grading: null | IGrading;\n}\n\nclass App extends React.PureComponent<{}, IAppState> {\n  levelStates: Map<string, ILevelState>;\n\n  constructor(props: {}) {\n    super(props);\n\n    // Load level states from localStorage.\n    this.levelStates = new Map<string, ILevelState>(); // Silence the error.\n    this.loadLevelStatesFromLocalStorage();\n\n    this.state = {\n      page: 'level-select',\n      currentLevel: null as unknown as ILevel,\n      code: '',\n      terminalOutput: '',\n      simOutput: '',\n      simResults: null,\n      grading: null,\n    };\n\n    window.onpopstate = (event) => {\n      this.setState({\n        page: 'level-select',\n      })\n    };\n  }\n\n  loadLevelStatesFromLocalStorage() {\n    this.levelStates = new Map<string, ILevelState>();\n    for (const level of globalLevelsList) {\n      const metadata = JSON.parse(\n        localStorage.getItem('level-' + level.internalName + '-meta')\n        || '{\"savedVersion\": 1, \"everBeaten\": false, \"everOpened\": false}'\n      );\n      const code = localStorage.getItem('level-' + level.internalName + '-saved-code') || level.startingCode;\n      this.levelStates.set(level.internalName, { metadata, code });\n    }\n  }\n\n  reportError(lineNum: number, message: string) {\n    const lineOfCode = this.state.code.split('\\n')[lineNum - 1];\n    this.setState({\n      terminalOutput: `  ${lineOfCode}\\n\\nError on line ${lineNum}: ${message}`,\n    });\n  }\n\n  simulate(components: EComponent[]) {\n    // Insert components for power and ground.\n    components = [\n      ...components,\n      {kind: 'signal', net: 'vdd', pattern: ['1'], repeat: false},\n      {kind: 'signal', net: 'gnd', pattern: ['0'], repeat: false},\n    ];\n    // Find all nets.\n    const nets = new Set<string>(['vdd', 'gnd']);\n    const probes: EProbe[] = [];\n    const netCanonicalizer = new UnionFind<string>();\n    for (const component of components) {\n      switch (component.kind) {\n        case 'fet':\n          for (const net of [component.gate, component.drain, component.source])\n            nets.add(net);\n          break;\n        case 'wire':\n          for (const net of component.nets)\n            nets.add(net);\n          netCanonicalizer.union(...component.nets);\n          break;\n        case 'probe':\n          probes.push(component);\n          nets.add(component.net);\n          break;\n        case 'pull_resistor':\n        case 'button':\n        case 'signal':\n          nets.add(component.net);\n          break;\n      }\n    }\n\n    // TODO: Possibly run DRCs here, like checking that it's valid CMOS.\n\n    if (!wasmInitialized) {\n      this.setState({ simOutput: 'Wasm component not initialized.' });\n      return;\n    }\n\n    // Serialize the results.\n    const descArray: number[] = [];\n    const netIndices = new Map<string, number>();\n    for (const net of nets) {\n      const canonicalizedNet = netCanonicalizer.canonicalize(net);\n      if (!netIndices.has(canonicalizedNet)) {\n        netIndices.set(canonicalizedNet, netIndices.size);\n      }\n      netIndices.set(net, netIndices.get(canonicalizedNet)!);\n    }\n    for (const component of components) {\n      switch (component.kind) {\n        case 'fet':\n          descArray.push(\n            1,\n            +component.isPfet,\n            netIndices.get(component.gate)!,\n            netIndices.get(component.drain)!,\n            netIndices.get(component.source)!,\n          );\n          break;\n        case 'signal':\n          descArray.push(\n            2,\n            netIndices.get(component.net)!,\n            +component.repeat,\n            component.pattern.length,\n            ...[...component.pattern].map((c) => ({'0': 0, '1': 1, 'z': 2}[c])),\n          );\n          break;\n        case 'pull_resistor':\n          descArray.push(\n            3,\n            {'up': 0, 'down': 1}[component.direction],\n            netIndices.get(component.net)!,\n          );\n          break;\n        default:\n          continue;\n      }\n      descArray.push(123456789);\n    }\n    const desc = new Uint32Array(descArray);\n    const traceValues = perform_simulation(desc, netIndices.size, 400, 10);\n    const traceIndices = get_indices();\n    const traces: Uint8Array[] = [];\n    let shootThroughOccurred = false;\n    let earliestShootThrough = Infinity;\n    for (let i = 0; i < traceIndices.length; i += 2) {\n      const start = traceIndices[i];\n      const len = traceIndices[i + 1];\n      const trace = traceValues.slice(start, start + len);\n      let t = 0;\n      for (const v of trace) {\n        if (v == 3) {\n          shootThroughOccurred = true;\n          earliestShootThrough = Math.min(earliestShootThrough, t);\n        }\n        t++;\n      }\n      traces.push(trace);\n    }\n\n    const netTraces = new Map<string, Uint8Array>();\n    for (const net of nets)\n      netTraces.set(net, traces[netIndices.get(net)!]);\n\n    let simOutput = `Components: ${components.length - 2}  Nets: ${nets.size}`;\n    const simResults: ISimResults = {\n      components: components.length,\n      nets: [...nets],\n      netTraces,\n      probes,\n      shootThroughOccurred,\n      earliestShootThrough,\n    };\n\n    const grading: IGrading = shootThroughOccurred ?\n      {\n        success: false,\n        failureTime: earliestShootThrough,\n        message: 'Shoot through (shorting vdd to gnd) is never allowed.',\n        miniMessage: 'Shoot through occurs here',\n      }\n      : this.state.currentLevel.gradeResults(simResults);\n\n    if (grading.success) {\n      const levelState = this.levelStates.get(this.state.currentLevel.internalName)!;\n      levelState.metadata.everBeaten = true;\n      persistLevelState(this.state.currentLevel.internalName, levelState);\n    } else {\n      simOutput += '\\n\\nLEVEL FAILED: ' + grading.message;\n    }\n\n    this.setState({ simOutput, simResults, grading });\n  }\n\n  onCompile = (code: string) => {\n    const Sk = (window as any).Sk;\n    Sk.pre = \"output\";\n    var results: string[] = [];\n\n    const components: EComponent[] = [];\n\n    var nextId = 0;\n    function getId(): string {\n      nextId++;\n      return nextId.toString();\n    }\n\n    Sk.builtins.vdd = Sk.ffi.remapToPy('vdd');\n    Sk.builtins.gnd = Sk.ffi.remapToPy('gnd');\n\n    Sk.builtins.new_net = (name: any) => {\n      return Sk.ffi.remapToJs(name) + getId();\n    };\n    Sk.builtins.new_net.co_varnames = ['name'];\n    Sk.builtins.new_net.$defaults = ['net'];\n    Sk.builtins.new_net.co_numargs = 1;\n\n    Sk.builtins.nfet = (gate: any, drain: any, source: any) => {\n      if (gate === undefined || drain === undefined)\n        throw 'nfet must be called like nfet(gate, drain, source) or like nfet(gate, drain) with source implicitly being gnd';\n      gate = Sk.ffi.remapToJs(gate);\n      drain = Sk.ffi.remapToJs(drain);\n      source = Sk.ffi.remapToJs(source);\n      if (source === undefined)\n        source = 'gnd';\n      if (typeof gate !== 'string') throw 'nfet(gate, drain, source) gate argument must be net';\n      if (typeof drain !== 'string') throw 'nfet(gate, drain, source) drain argument must be net';\n      if (typeof source !== 'string') throw 'nfet(gate, drain, source) source argument must be net';\n      components.push({ kind: 'fet', isPfet: false, gate, drain, source });\n    };\n    Sk.builtins.nfet.co_varnames = ['gate', 'drain', 'source'];\n    Sk.builtins.nfet.$defaults = [undefined, undefined, undefined];\n    Sk.builtins.nfet.co_numargs = 3;\n\n    Sk.builtins.pfet = (gate: any, drain: any, source: any) => {\n      if (gate === undefined || drain === undefined)\n        throw 'pfet must be called like pfet(gate, drain, source) or like pfet(gate, drain) with source implicitly being vdd';\n      gate = Sk.ffi.remapToJs(gate);\n      drain = Sk.ffi.remapToJs(drain);\n      source = Sk.ffi.remapToJs(source);\n      if (source === undefined)\n        source = 'vdd';\n      if (typeof gate !== 'string') throw 'pfet(gate, drain, source) gate argument must be net';\n      if (typeof drain !== 'string') throw 'pfet(gate, drain, source) drain argument must be net';\n      if (typeof source !== 'string') throw 'pfet(gate, drain, source) source argument must be net';\n      components.push({ kind: 'fet', isPfet: true, gate, drain, source });\n    };\n    Sk.builtins.pfet.co_varnames = ['gate', 'drain', 'source'];\n    Sk.builtins.pfet.$defaults = [undefined, undefined, undefined];\n    Sk.builtins.pfet.co_numargs = 3;\n\n    Sk.builtins.probe = (label: string, net: any) => {\n      label = Sk.ffi.remapToJs(label);\n      net = Sk.ffi.remapToJs(net);\n      if (typeof label !== 'string') throw 'probe(label, net) label argument must be string';\n      if (typeof net !== 'string') throw 'probe(label, net) net argument must be string';\n      components.push({ kind: 'probe', label, net });\n    };\n    Sk.builtins.probe.co_varnames = ['label', 'net'];\n    Sk.builtins.probe.co_numargs = 2;\n\n    Sk.builtins.pull_down_resistor = (net: any) => {\n      net = Sk.ffi.remapToJs(net);\n      if (typeof net !== 'string') throw 'pull_down_resistor(net) net argument must be string';\n      components.push({ kind: 'pull_resistor', direction: 'down', net });\n    };\n    Sk.builtins.pull_down_resistor.co_varnames = ['net'];\n    Sk.builtins.pull_down_resistor.co_numargs = 1;\n\n    Sk.builtins.pull_up_resistor = (net: any) => {\n      net = Sk.ffi.remapToJs(net);\n      if (typeof net !== 'string') throw 'pull_up_resistor(net) net argument must be string';\n      components.push({ kind: 'pull_resistor', direction: 'up', net });\n    };\n    Sk.builtins.pull_up_resistor.co_varnames = ['net'];\n    Sk.builtins.pull_up_resistor.co_numargs = 1;\n\n    Sk.builtins.wire_together = (net1: any, net2: any) => {\n      net1 = Sk.ffi.remapToJs(net1);\n      net2 = Sk.ffi.remapToJs(net2);\n      if (typeof net1 !== 'string') throw 'wire_together(net1, net2) net1 argument must be string';\n      if (typeof net2 !== 'string') throw 'wire_together(net1, net2) net2 argument must be string';\n      components.push({ kind: 'wire', nets: [net1, net2] });\n    };\n    Sk.builtins.wire_together.co_varnames = ['net1', 'net2'];\n    Sk.builtins.wire_together.co_numargs = 2;\n\n    /*\n    Sk.builtins.button = () => {\n      const net = 'button' + getId();\n      components.push({ kind: 'button', net });\n      return Sk.ffi.remapToPy(net);\n    };\n    Sk.builtins.button.co_varnames = [];\n    Sk.builtins.button.co_numargs = 0;\n    */\n\n    Sk.builtins.signal = (pattern: any, name: any) => {\n      const net = Sk.ffi.remapToJs(name) + getId();\n      if (pattern === undefined)\n        throw 'signal must take pattern, like: signal(\"01...\")';\n      pattern = Sk.ffi.remapToJs(pattern).toLowerCase();\n      const repeat = pattern.endsWith('...');\n      if (repeat)\n        pattern = pattern.slice(0, -3);\n      for (const c of pattern)\n        if (c !== '0' && c !== '1' && c !== 'z')\n          throw 'The pattern must be made of 0s, 1s and zs, and may optionally end with ... to indicate that the pattern should repeat.';\n      components.push({ kind: 'signal', net, pattern, repeat });\n      return Sk.ffi.remapToPy(net);\n    };\n    Sk.builtins.signal.co_varnames = ['desc', 'name'];\n    Sk.builtins.signal.$defaults = [undefined, 'signal'];\n    Sk.builtins.signal.co_numargs = 2;\n\n    Sk.builtins.get_level_inputs = () => {\n      const nets = this.state.currentLevel.makeInputNets(components);\n      return Sk.ffi.remapToPy(nets);\n    };\n    Sk.builtins.get_level_inputs.co_varnames = [];\n    Sk.builtins.get_level_inputs.co_numargs = 0;\n\n    Sk.builtins.get_level_outputs = () => {\n      const nets = this.state.currentLevel.makeOutputNets(components);\n      return Sk.ffi.remapToPy(nets);\n    };\n    Sk.builtins.get_level_outputs.co_varnames = [];\n    Sk.builtins.get_level_outputs.co_numargs = 0;\n\n    Sk.configure({\n      output: (obj: any) => {\n        results.push(obj.toString());\n        //console.log('Printing:', obj.toString());\n      },\n      read: builtinRead,\n    });\n    //(Sk.TurtleGraphics || (Sk.TurtleGraphics = {})).target = 'mycanvas';\n    var myPromise = Sk.misceval.asyncToPromise(function () {\n      return Sk.importMainWithBody(\"<stdin>\", false, code, true);\n    });\n    myPromise.then(\n      (mod: any) => {\n        //console.log('success');\n        this.setState({ terminalOutput: `Success: components=${components.length}\\n` + results.join('') });\n        this.simulate(components);\n      },\n      (err: any) => {\n        this.setState({ terminalOutput: results.join('') + '\\n' + err.toString() });\n      },\n    );\n  }\n\n  switchToLevel(level: ILevel) {\n    this.setState({\n      page: 'level',\n      currentLevel: level,\n      code: this.levelStates.get(level.internalName)!.code,\n      terminalOutput: '(Hit ctrl + enter in the code window to rerun.)',\n      simOutput: '',\n      simResults: null,\n    });\n\n    const levelState = this.levelStates.get(level.internalName)!;\n    levelState.metadata.everOpened = true;\n    persistLevelState(level.internalName, levelState);\n\n    window.history.pushState({page: 'level', currentLevel: level.internalName}, 'Make a Microprocessor');\n  }\n\n  render() {\n    if (this.state.page === 'level-select') {\n      var locked = false;\n\n      return <div style={{\n        width: '100%',\n        height: '100vh',\n        color: 'white',\n        fontFamily: 'monospace',\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center',\n        fontSize: '150%',\n      }}>\n        <div style={{\n          marginTop: 30,\n        }}>\n          <span style={{fontSize: '200%'}}>Make a Processor</span><br/>\n          <br/>\n          Select a level:\n          <div style={{ display: 'flex', flexDirection: 'column', marginTop: 20 }}>\n            {globalLevelsList.map((level, i) => {\n              const levelState = this.levelStates.get(level.internalName)!;\n\n              const result = <div\n                key={i}\n                style={{\n                  fontSize: '150%',\n                  margin: 10,\n                  padding: 10,\n                  width: 300,\n                  position: 'relative',\n                }}\n                className={locked ? 'lockedButton' : 'hoverButton'}\n                onClick={locked ? () => null : () => this.switchToLevel(level)}\n              >\n                {locked ? '???' : level.name}\n                {!locked && !levelState.metadata.everOpened && <div style={{\n                  position: 'absolute',\n                  fontSize: '80%',\n                  color: 'red',\n                  left: '92%',\n                  top: '0%',\n                  transform: 'rotate(30deg)',\n                }}>\n                  New!\n                </div>}\n                {levelState.metadata.everBeaten && <div style={{\n                  position: 'absolute',\n                  fontSize: '300%',\n                  color: 'green',\n                  left: '100%',\n                  top: '50%',\n                  transform: 'translate(-50%, -50%)',\n                }}>\n                  ✓\n                </div>}\n              </div>;\n\n              if (!levelState.metadata.everBeaten)\n                locked = true;\n\n              return result;\n            })}\n          </div>\n        </div>\n\n        <div style={{ position: 'absolute', left: 10, bottom: 10 }}>\n          By Peter Schmidt-Nielsen (v0.1)\n        </div>\n        <div\n          style={{ position: 'absolute', right: 10, bottom: 10, padding: 10 }}\n          className='hoverButton'\n          onClick={() => {\n            if (window.confirm('Are you sure you want to completely reset the game state, including throwing away all of your code?')) {\n              resetGameState();\n              this.loadLevelStatesFromLocalStorage();\n              this.forceUpdate();\n            }\n          }}\n        >\n          Reset Entire Game State\n        </div>\n      </div>;\n    }\n\n    const codeMirrorOptions = (onCompile: (code: string) => void) => ({\n      mode: 'python',\n      theme: 'material',\n      lineNumbers: true,\n      indentUnit: 4,\n      lineWrapping: true,\n      extraKeys: {\n        'Ctrl-Enter': (cm: any) => {\n          onCompile(this.state.code);\n        },\n        'Ctrl-S': (cm: any) => {\n          const levelState = this.levelStates.get(this.state.currentLevel.internalName)!;\n          levelState.code = this.state.code;\n          persistLevelState(this.state.currentLevel.internalName, levelState);\n          this.forceUpdate();\n        },\n        /*'Tab': (cm: any) => {\n          cm.replaceSelection('  ', 'end');\n        },*/\n      },\n    });\n    const vertResizeStyle = {\n      background: 'black',\n      width: '3px',\n      cursor: 'col-resize',\n      height: '100%',\n    };\n    const horizResizeStyle = {\n      background: 'black',\n      height: '3px',\n      cursor: 'row-resize',\n      width: '100%',\n    };\n    let vertSplitDefault = parseInt(localStorage.getItem('split1') || '500');\n    let horizSplitDefault = parseInt(localStorage.getItem('split2') || '400');\n    return <div style={{\n      display: 'flex',\n    }}>\n      {/* Code editor */}\n      <SplitPane\n        split=\"vertical\"\n        minSize={300}\n        defaultSize={vertSplitDefault}\n        onChange={(size) => localStorage.setItem('split1', size.toString())}\n        resizerStyle={vertResizeStyle}\n      >\n        <div style={{ position: 'relative' }}>\n          <ControlledCodeMirror\n            value={this.state.code}\n            options={codeMirrorOptions(this.onCompile)}\n            onBeforeChange={(editor, data, code) => {\n              this.setState({ code });\n            }}\n          />\n          {this.state.code !== this.levelStates.get(this.state.currentLevel.internalName)!.code &&\n            <div style={{\n              position: 'absolute',\n              right: '5%',\n              bottom: '5%',\n              userSelect: 'none',\n              zIndex: 5,\n              color: 'red',\n              opacity: 0.5,\n            }}>\n                ⬤ Unsaved\n            </div>\n          }\n        </div>\n\n        <div>\n          <SplitPane\n            split=\"horizontal\"\n            minSize={30}\n            defaultSize={horizSplitDefault}\n            onChange={(size) => localStorage.setItem('split2', size.toString())}\n            resizerStyle={horizResizeStyle}\n          >\n            <div style={{\n              width: '100%',\n              height: '100%',\n              backgroundColor: '#333',\n              color: 'white',\n              fontFamily: 'monospace',\n            }}>\n              <div style={{ margin: 10 }}>\n                {/*\n                {this.state.simResults !== null && <>\n                  <Collapsible trigger='Nets' transitionTime={100}>\n                    {[...this.state.simResults.nets].map((net: any) =>\n                      <div key={net}>\n                        {net}: 1234\n                      </div>\n                    )}\n                  </Collapsible>\n                </>}\n                */}\n\n                {this.state.simResults !== null &&\n                  /*\n                  this.state.simResults.probes.map((probeName) =>\n                    <div key={probeName} style={{display: 'flex', justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}>\n                      <div>{probeName}:</div>\n                      {renderTrace(this.state.simResults!.netTraces.get(probeName)!)}\n                    </div>\n                  )*/\n                  renderTraces(this.state.simResults, this.state.grading!)\n                }\n              </div>\n            </div>\n\n            <div style={{\n              backgroundColor: '#222',\n              color: 'white',\n              fontFamily: 'monospace',\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n            }}>\n              <div style={{ margin: 10, width: 400 }}>\n                <b>{this.state.currentLevel.name}</b>\n                <p style={{whiteSpace: 'pre-wrap'}}>\n                  {this.state.currentLevel.levelDesc}\n                </p>\n              </div>\n              <div\n                style={{ width: 2, backgroundColor: '#555' }}\n              />\n              <div style={{\n                margin: 10,\n                whiteSpace: 'pre-wrap',\n                color: 'white',\n              }}>\n                {this.state.terminalOutput}\n                <span style={{color: 'red'}}>{'\\n\\n' + this.state.simOutput}</span>\n              </div>\n            </div>\n          </SplitPane>\n        </div>\n      </SplitPane>\n\n      {/* Menu bar */}\n      <div style={{\n        width: 100,\n      }}>\n        asdf\n      </div>\n    </div>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}