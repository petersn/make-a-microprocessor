(this.webpackJsonpcomp=this.webpackJsonpcomp||[]).push([[0],{24:function(e,t,n){},25:function(e,t,n){},35:function(e,t,n){"use strict";function i(e){function t(e,t){if(!e.hasOwnProperty(t))throw new Error("Undefined state "+t+" in simple mode")}function n(e,t){if(!e)return/(?:)/;var n="";return e instanceof RegExp?(e.ignoreCase&&(n="i"),e=e.source):e=String(e),new RegExp((!1===t?"":"^")+"(?:"+e+")",n)}function i(e,i){(e.next||e.push)&&t(i,e.next||e.push),this.regex=n(e.regex),this.token=function(e){if(!e)return null;if(e.apply)return e;if("string"==typeof e)return e.replace(/\./g," ");for(var t=[],n=0;n<e.length;n++)t.push(e[n]&&e[n].replace(/\./g," "));return t}(e.token),this.data=e}function r(e,t){return function(n,i){if(i.pending){var r=i.pending.shift();return 0==i.pending.length&&(i.pending=null),n.pos+=r.text.length,r.token}if(i.local){if(i.local.end&&n.match(i.local.end)){var a=i.local.endToken||null;return i.local=i.localState=null,a}var o;a=i.local.mode.token(n,i.localState);return i.local.endScan&&(o=i.local.endScan.exec(n.current()))&&(n.pos=n.start+o.index),a}for(var l=e[i.state],x=0;x<l.length;x++){var c=l[x],u=(!c.data.sol||n.sol())&&n.match(c.regex);if(u){c.data.next?i.state=c.data.next:c.data.push?((i.stack||(i.stack=[])).push(i.state),i.state=c.data.push):c.data.pop&&i.stack&&i.stack.length&&(i.state=i.stack.pop()),c.data.mode&&s(t,i,c.data.mode,c.token),c.data.indent&&i.indent.push(n.indentation()+t.indentUnit),c.data.dedent&&i.indent.pop();var d=c.token;if(d&&d.apply&&(d=d(u)),u.length>2&&c.token&&"string"!=typeof c.token){i.pending=[];for(var h=2;h<u.length;h++)u[h]&&i.pending.push({text:u[h],token:c.token[h-1]});return n.backUp(u[0].length-(u[1]?u[1].length:0)),d[0]}return d&&d.join?d[0]:d}}return n.next(),null}}function a(e,t){if(e===t)return!0;if(!e||"object"!=typeof e||!t||"object"!=typeof t)return!1;var n=0;for(var i in e)if(e.hasOwnProperty(i)){if(!t.hasOwnProperty(i)||!a(e[i],t[i]))return!1;n++}for(var i in t)t.hasOwnProperty(i)&&n--;return 0==n}function s(t,i,r,s){var o;if(r.persistent)for(var l=i.persistentStates;l&&!o;l=l.next)(r.spec?a(r.spec,l.spec):r.mode==l.mode)&&(o=l);var x=o?o.mode:r.mode||e.getMode(t,r.spec),c=o?o.state:e.startState(x);r.persistent&&!o&&(i.persistentStates={mode:x,spec:r.spec,state:c,next:i.persistentStates}),i.localState=c,i.local={mode:x,end:r.end&&n(r.end),endScan:r.end&&!1!==r.forceEnd&&n(r.end,!1),endToken:s&&s.join?s[s.length-1]:s}}function o(t,n){return function(i,r,a){if(i.local&&i.local.mode.indent)return i.local.mode.indent(i.localState,r,a);if(null==i.indent||i.local||n.dontIndentStates&&function(e,t){for(var n=0;n<t.length;n++)if(t[n]===e)return!0}(i.state,n.dontIndentStates)>-1)return e.Pass;var s=i.indent.length-1,o=t[i.state];e:for(;;){for(var l=0;l<o.length;l++){var x=o[l];if(x.data.dedent&&!1!==x.data.dedentIfLineStart){var c=x.regex.exec(r);if(c&&c[0]){s--,(x.next||x.push)&&(o=t[x.next||x.push]),r=r.slice(c[0].length);continue e}}}break}return s<0?0:i.indent[s]}}e.defineSimpleMode=function(t,n){e.defineMode(t,(function(t){return e.simpleMode(t,n)}))},e.simpleMode=function(n,a){t(a,"start");var s={},l=a.meta||{},x=!1;for(var c in a)if(c!=l&&a.hasOwnProperty(c))for(var u=s[c]=[],d=a[c],h=0;h<d.length;h++){var p=d[h];u.push(new i(p,a)),(p.indent||p.dedent)&&(x=!0)}var g={startState:function(){return{state:"start",pending:null,local:null,localState:null,indent:x?[]:null}},copyState:function(t){var n={state:t.state,pending:t.pending,local:t.local,localState:null,indent:t.indent&&t.indent.slice(0)};t.localState&&(n.localState=e.copyState(t.local.mode,t.localState)),t.stack&&(n.stack=t.stack.slice(0));for(var i=t.persistentStates;i;i=i.next)n.persistentStates={mode:i.mode,spec:i.spec,state:i.state==t.localState?n.localState:e.copyState(i.mode,i.state),next:n.persistentStates};return n},token:r(s,n),innerMode:function(e){return e.local&&{mode:e.local.mode,state:e.localState}},indent:o(s,l)};if(l)for(var f in l)l.hasOwnProperty(f)&&(g[f]=l[f]);return g}}n.r(t),n.d(t,"addDefineSimpleMode",(function(){return i}))},36:function(e,t,n){"use strict";n.r(t);var i,r=n(3),a=n.n(r),s=n(15),o=n.n(s),l=(n(24),n(19)),x=n(17),c=n(2),u=n(14),d=n(4),h=n(11),p=n(12),g=(n(25),n(16)),f=(n(27),n(28),n(29),n(7)),m=n.n(f),b=n(18),v=n(9),_=n.n(v),y=n(13),w=new Array(32).fill(void 0);function k(e){return w[e]}w.push(void 0,null,!0,!1);var j=w.length;function O(e){var t=k(e);return function(e){e<36||(w[e]=j,j=e)}(e),t}var S=null;function z(){return null!==S&&S.buffer===i.memory.buffer||(S=new Uint32Array(i.memory.buffer)),S}var A=0;var N=null;function T(){return null!==N&&N.buffer===i.memory.buffer||(N=new Int32Array(i.memory.buffer)),N}var D=null;function C(){return null!==D&&D.buffer===i.memory.buffer||(D=new Uint8Array(i.memory.buffer)),D}function L(e,t,n,r){try{var a=i.__wbindgen_add_to_stack_pointer(-16),s=function(e,t){var n=t(4*e.length);return z().set(e,n/4),A=e.length,n}(e,i.__wbindgen_malloc),o=A;i.perform_simulation(a,s,o,t,n,r);var l=T()[a/4+0],x=T()[a/4+1],c=(u=l,d=x,C().subarray(u/1,u/1+d)).slice();return i.__wbindgen_free(l,1*x),c}finally{i.__wbindgen_add_to_stack_pointer(16)}var u,d}function B(){try{var e=i.__wbindgen_add_to_stack_pointer(-16);i.get_indices(e);var t=T()[e/4+0],n=T()[e/4+1],r=(a=t,s=n,z().subarray(a/4,a/4+s)).slice();return i.__wbindgen_free(t,4*n),r}finally{i.__wbindgen_add_to_stack_pointer(16)}var a,s}var M=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});function q(e,t){return M.decode(C().subarray(e,e+t))}function R(e){j===w.length&&w.push(w.length+1);var t=j;return j=w[t],w[t]=e,t}M.decode();var I=new TextEncoder("utf-8"),P="function"===typeof I.encodeInto?function(e,t){return I.encodeInto(e,t)}:function(e,t){var n=I.encode(e);return t.set(n),{read:e.length,written:n.length}};function W(e,t,n){if(void 0===n){var i=I.encode(e),r=t(i.length);return C().subarray(r,r+i.length).set(i),A=i.length,r}for(var a=e.length,s=t(a),o=C(),l=0;l<a;l++){var x=e.charCodeAt(l);if(x>127)break;o[s+l]=x}if(l!==a){0!==l&&(e=e.slice(l)),s=n(s,a,a=l+3*e.length);var c=C().subarray(s+l,s+a);l+=P(e,c).written}return A=l,s}function F(e,t){return E.apply(this,arguments)}function E(){return(E=Object(y.a)(_.a.mark((function e(t,n){var i,r;return _.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("function"===typeof Response&&t instanceof Response)){e.next=23;break}if("function"!==typeof WebAssembly.instantiateStreaming){e.next=15;break}return e.prev=2,e.next=5,WebAssembly.instantiateStreaming(t,n);case 5:return e.abrupt("return",e.sent);case 8:if(e.prev=8,e.t0=e.catch(2),"application/wasm"==t.headers.get("Content-Type")){e.next=14;break}console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",e.t0),e.next=15;break;case 14:throw e.t0;case 15:return e.next=17,t.arrayBuffer();case 17:return i=e.sent,e.next=20,WebAssembly.instantiate(i,n);case 20:return e.abrupt("return",e.sent);case 23:return e.next=25,WebAssembly.instantiate(t,n);case 25:if(!((r=e.sent)instanceof WebAssembly.Instance)){e.next=30;break}return e.abrupt("return",{instance:r,module:t});case 30:return e.abrupt("return",r);case 31:case"end":return e.stop()}}),e,null,[[2,8]])})))).apply(this,arguments)}function J(e){return Y.apply(this,arguments)}function Y(){return(Y=Object(y.a)(_.a.mark((function e(t){var n,r,a,s;return _.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n={}).wbg={},n.wbg.__wbg_new_59cb74e423758ede=function(){return R(new Error)},n.wbg.__wbg_stack_558ba5917b466edd=function(e,t){var n=W(k(t).stack,i.__wbindgen_malloc,i.__wbindgen_realloc),r=A;T()[e/4+1]=r,T()[e/4+0]=n},n.wbg.__wbg_error_4bb6c2a97407129a=function(e,t){try{console.error(q(e,t))}finally{i.__wbindgen_free(e,t)}},n.wbg.__wbindgen_object_drop_ref=function(e){O(e)},("string"===typeof t||"function"===typeof Request&&t instanceof Request||"function"===typeof URL&&t instanceof URL)&&(t=fetch(t)),e.t0=F,e.next=11,t;case 11:return e.t1=e.sent,e.t2=n,e.next=15,(0,e.t0)(e.t1,e.t2);case 15:return r=e.sent,a=r.instance,s=r.module,i=a.exports,J.__wbindgen_wasm_module=s,e.abrupt("return",i);case 21:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var U=J,Q=n(0),Z=!1;U("/make-a-microprocessor/libsnpspice_bg.wasm").then((function(){Z=!0,i.init_panic_hook()}));function H(e){var t=window.Sk;if(void 0===t.builtinFiles||void 0===t.builtinFiles.files[e])throw"File not found: '"+e+"'";return t.builtinFiles.files[e]}n(35).addDefineSimpleMode(m.a),m.a.defineSimpleMode("complang",{start:[{regex:/"(?:[^\\]|\\.)*?(?:"|$)/,token:"string"},{regex:/(?:pfet|nfet|probe|wire|button|signal)\b/,token:"keyword"},{regex:/(?:vdd|gnd)\b/,token:"builtin"},{regex:/[01]+[.][.][.]/i,token:"number"},{regex:/0x[a-f\d]+|[-+]?(?:\.\d+|\d+\.?\d*)(?:e[-+]?\d+)?/i,token:"number"},{regex:/`.*`/,token:"units"},{regex:/\/\/.*/,token:"comment"},{regex:/[-+\/*=<>!~]+/,token:"operator"},{regex:/\$[a-zA-Z_][a-zA-Z0-9_']*/,token:"compilevar"},{regex:/[a-zA-Z_][a-zA-Z0-9_']*/,token:"neutral"},{regex:/[\{\[\(]/,indent:!0},{regex:/[\}\]\)]/,dedent:!0}],comment:[{regex:/.*?\*\//,token:"comment",next:"start"},{regex:/.*/,token:"comment"}],meta:{dontIndentStates:["comment"],lineComment:"//"}});var $=function(){function e(){Object(h.a)(this,e),this.weights=new Map,this.parents=new Map}return Object(p.a)(e,[{key:"canonicalize",value:function(e){this.weights.has(e)||(this.weights.set(e,1),this.parents.set(e,e));for(var t=[e],n=this.parents.get(e);n!==t[t.length-1];)t.push(n),n=this.parents.get(n);for(var i=0,r=t;i<r.length;i++){var a=r[i];this.parents.set(a,n)}return n}},{key:"union",value:function(){for(var e=this,t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];if(0!==n.length){var r,a=n.map((function(t){return e.canonicalize(t)})),s=0,o=null,l=0,x=Object(d.a)(a);try{for(x.s();!(r=x.n()).done;){var c=r.value,u=this.weights.get(c);s+=u,u>l&&(o=c,l=u)}}catch(f){x.e(f)}finally{x.f()}this.weights.set(o,s);var h,p=Object(d.a)(a);try{for(p.s();!(h=p.n()).done;){var g=h.value;g!==o&&this.parents.set(g,o)}}catch(f){p.e(f)}finally{p.f()}}}}]),e}();function G(e,t,n){var i,r=30*(t.probes.length+1),a=[],s=0,o=Object(d.a)(t.probes);try{for(o.s();!(i=o.n()).done;){var l,x=i.value,c=[],u=[],h=0,p=-1,g=t.netTraces.get(x.net),f=Object(d.a)(g);try{for(f.s();!(l=f.n()).done;){var m=l.value,b=3+h*e.xStep,v=3,_=27;if(0===m||(1===m?v=_=27:2===m?v=_=3:3===m&&(p=b)),0===h?c.push("M ".concat(b," ").concat(_)):c.push("L ".concat(b," ").concat(_)),u.push("L ".concat(b," ").concat(v)),h++,p>=0)break}}catch(j){f.e(j)}finally{f.f()}u.reverse(),u.push("Z"),a.push(Object(Q.jsxs)("g",{transform:"translate(140 ".concat(30*s,")"),children:[Object(Q.jsx)("text",{x:-140,y:20,stroke:"white",fill:"white",children:x.label}),Object(Q.jsx)("path",{d:[].concat(c,u).join(" "),stroke:"white",strokeWidth:e.xStep>=5?3:e.xStep>=4?2:1.5,fill:"rgba(255, 255, 255, 0.3)"}),-1!==p&&Object(Q.jsxs)(Q.Fragment,{children:[Object(Q.jsx)("path",{d:"M ".concat(p," 3 L ").concat(p+110," 3 L ").concat(p+110," 27 L ").concat(p," 27 Z"),stroke:"red",strokeWidth:3,fill:"rgba(255, 0, 0, 0.3)"}),Object(Q.jsx)("text",{x:p+55,y:20,textAnchor:"middle",stroke:"red",fill:"red",children:"Shoot through!"})]})]},s)),s++}}catch(j){o.e(j)}finally{o.f()}for(var y=143+e.xStep*n.failureTime,w=[],k=1+e.clockDivider;k<e.simSteps;k+=e.clockDivider*e.tickSpacing)w.push(Object(Q.jsx)("path",{d:"M ".concat(143+e.xStep*k," 0 l 0 ").concat(r-30),stroke:"rgba(255, 255, 255, 0.2)",strokeWidth:2,fill:"transparent"}));return Object(Q.jsxs)("svg",{style:{width:"100%",height:r},children:[a,!n.success&&Object(Q.jsxs)(Q.Fragment,{children:[Object(Q.jsx)("path",{d:"M ".concat(y," 0 L ").concat(y," ").concat(r-20),stroke:"red",strokeWidth:2,fill:"transparent"}),Object(Q.jsx)("text",{textAnchor:"middle",x:y,y:r-5,stroke:"red",fill:"red",children:n.miniMessage})]}),w]})}function V(e,t){localStorage.setItem("level-"+e+"-meta",JSON.stringify(t.metadata)),localStorage.setItem("level-"+e+"-saved-code",t.code)}function K(e,t){var n,i=Object(d.a)(t);try{for(i.s();!(n=i.n()).done;){var r=n.value,a=r.net,s=r.netName,o=r.reqs,l=r.failureMessages,x=e.netTraces.get(a);if(void 0===x)return{success:!1,failureTime:0,message:"Signal "+s+" is undefined. Are you calling get_level_outputs?",miniMessage:"Signal "+s+" undefined"};var c,h=Object(d.a)(o);try{for(h.s();!(c=h.n()).done;){var p=Object(u.a)(c.value,2),g=p[0],f=p[1];if(-1!=f&&x[g]!==f){var m={0:"undriven",1:"low",2:"high"},b=m[x[g]],v=m[f],_="".concat(s," is ").concat(b,", but should have been ").concat(v,"."),y="".concat(s," should be ").concat(v);if(void 0!==l){var w=Object(u.a)(l,2);_=w[0],y=w[1]}return{success:!1,failureTime:g,message:_,miniMessage:y}}}}catch(k){h.e(k)}finally{h.f()}}}catch(k){i.e(k)}finally{i.f()}return{success:!0,failureTime:0,message:"All tests passed!",miniMessage:""}}function X(e,t){var n,i=[],r=Math.round(.8*e),a=Object(d.a)(t);try{for(a.s();!(n=a.n()).done;){var s=n.value;"z"===s?i.push([r,0]):"0"===s?i.push([r,1]):"1"===s?i.push([r,2]):"x"===s&&i.push([r,-1]),r+=e}}catch(o){a.e(o)}finally{a.f()}return i}var ee=[{internalName:"fets",name:"FETs",levelDesc:'Welcome to make-a-microprocessor, where you use FETs to solve a series of puzzles.\n\nWrite your "Python" program in the left pane, calling functions to make electrical components. Run your program by hitting ctrl + enter in the code pane.\n\nTo get a list of electrical components and code to construct them click on the "Parts List" button in the top left.\n\nYour goal in this first level is to use two FETs to drive the `not_A` net to be high when `A` is low, and vice versa (an inverter/not gate).',startingCode:'# Your Python code here.\n\n# The nets vdd and gnd are built in, and are always 1 and 0 respectively.\nprobe("Power", vdd)\nprobe("Ground", gnd)\n\nA, = get_level_inputs()\nnot_A, = get_level_outputs()\n\nprobe("A", A)\nprobe("\xacA", not_A)\n\n# Hint:\n# nfet(gate, drain, source)\n# pfet(gate, drain, source)\n',makeInputNets:function(e){return e.push({kind:"signal",net:"_net_A",pattern:Object(c.a)("01"),repeat:!0}),["_net_A"]},makeOutputNets:function(){return["_net_not_A"]},gradeResults:function(e,t){return K(t,[{net:"_net_not_A",netName:"\xacA",reqs:X(e.clockDivider,"1010")}])},xStep:5,simSteps:400,clockDivider:10,tickSpacing:1},{internalName:"highz",name:"High-Z Output",levelDesc:"A component's output is said to be high Z (high impedance) when it isn't driven by the component. In this level you must construct a gated inverter that takes a second `output_enable` signal. Your gated inverter must drive the output if and only if `output_enable` is high.\n\nSpecifically, your component's truth table must be:\n\n  A | OE | out\n  -------------\n  0 | 0  |  Z\n  1 | 0  |  Z\n  0 | 1  |  1\n  1 | 1  |  0\n",startingCode:'A, output_enable = get_level_inputs()\nnot_A, = get_level_outputs()\n\nprobe("Output enable", output_enable)\nprobe("A", A)\nprobe("\xacA", not_A)\n\n# Hint: You can create your own signals for testing purposes.\ntest_signal = signal("001z10...")\nprobe("Test signal", test_signal)\n\n# You might also want to check out new_net() and wire_together(net1, net2) in the Parts List.\n',makeInputNets:function(e){return e.push({kind:"signal",net:"_net_A",pattern:Object(c.a)("z01001010"),repeat:!1},{kind:"signal",net:"_net_output_enable",pattern:Object(c.a)("000011100"),repeat:!1}),["_net_A","_net_output_enable"]},makeOutputNets:function(){return["_net_not_A"]},gradeResults:function(e,t){return K(t,[{net:"_net_not_A",netName:"\xacA",reqs:X(e.clockDivider,"zzzz101z")}])},xStep:5,simSteps:400,clockDivider:10,tickSpacing:1},{internalName:"logic_gates",name:"Logic Gates",levelDesc:"We will now create logic gates. Implement each of the listed gate functions.\n\nThese definitions will be extremely useful, so you may wish to copy some or all of them to later levels as well.\n\nAll your logic gate implementations must drive their output even if an input is undriven (high Z) so long as the other input(s) are sufficient to determine the output. For example, your AND implementation must drive the output low if one input is low and the other is undriven.\n\nDo not worry if your gate implementations produce garbage outputs for a small amount of time after their inputs switch. This is a normal part of combinational logic, and is known as the propagation delay. Some nomenclature:\n\n  Propagation delay: Max time from an input change to output stabilizing.\n  Contamination delay: Min time from an input change to output change.",startingCode:'\ndef not_gate(x):\n    r = new_net()\n    ...\n    return r\n\ndef nand_gate(x, y):\n    r = new_net()\n    ...\n    return r\n\ndef and_gate(x, y):\n    r = new_net()\n    ...\n    return r\n\ndef or_gate(x, y):\n    r = new_net()\n    ...\n    return r\n\ndef xor_gate(x, y):\n    r = new_net()\n    ...\n    return r\n\ndef mux_gate(select, x, y):\n    r = new_net()\n    ...\n    return r\n\nA, B, C = get_level_inputs()\nnot_out, nand_out, and_out, or_out, xor_out, mux_out = get_level_outputs()\n\nprobe("A", A)\nprobe("B", B)\nprobe("C", C)\nprobe("\xacA", not_out)\nprobe("\xac(A \u2227 B)", nand_out)\nprobe("A \u2227 B", and_out)\nprobe("A \u2228 B", or_out)\nprobe("A \u2295 B", xor_out)\nprobe("mux(C, A, B)", mux_out)\n\nwire_together(not_gate(A), not_out)\nwire_together(nand_gate(A, B), nand_out)\nwire_together(and_gate(A, B), and_out)\nwire_together(or_gate(A, B), or_out)\nwire_together(xor_gate(A, B), xor_out)\nwire_together(mux_gate(C, A, B), mux_out)\n',makeInputNets:function(e){return e.push({kind:"signal",net:"_net_A",pattern:Object(c.a)("01010101zz01z"),repeat:!1},{kind:"signal",net:"_net_B",pattern:Object(c.a)("0011001101zzz"),repeat:!1},{kind:"signal",net:"_net_C",pattern:Object(c.a)("000011110000z"),repeat:!1}),["_net_A","_net_B","_net_C"]},makeOutputNets:function(){return["_net_not_out","_net_nand_out","_net_and_out","_net_or_out","_net_xor_out","_net_mux_out"]},gradeResults:function(e,t){return K(t,[{net:"_net_not_out",netName:"\xacA",reqs:X(e.clockDivider,"10101010zz10z")},{net:"_net_nand_out",netName:"\xac(A \u2227 B)",reqs:X(e.clockDivider,"111011101z1zz")},{net:"_net_and_out",netName:"A \u2227 B",reqs:X(e.clockDivider,"000100010z0zz")},{net:"_net_or_out",netName:"A \u2228 B",reqs:X(e.clockDivider,"01110111z1z1z")},{net:"_net_xor_out",netName:"A \u2295 B",reqs:X(e.clockDivider,"01100110zzzzz")},{net:"_net_mux_out",netName:"mux(C, A, B)",reqs:X(e.clockDivider,"01010011zz01z")}])},xStep:4,simSteps:400,clockDivider:10,tickSpacing:1},{internalName:"adder",name:"Adder",levelDesc:"Your goal is to implement a 3-bit + 3-bit to 3-bit two's complement adder (throwing away the carry bit). The numbers are all little-endian, and thus the first bit in a list is the lowest order.",startingCode:'\ndef adder(a: "List[Net]", b: "List[Net]") -> "List[Net]":\n    assert len(a) == len(b)\n    result = [new_net() for _ in range(len(a))]\n    # Inputs are little endian: a[0] is the lowest order bit.\n    ...\n    return result\n\nA_nets, B_nets = get_level_inputs()\noutput_nets = get_level_outputs()\n\nfor i, n in enumerate(A_nets):\n    probe("A[%i]" % i, n)\nfor i, n in enumerate(B_nets):\n    probe("B[%i]" % i, n)\nfor i, n in enumerate(output_nets):\n    probe("(A + B)[%i]" % i, n)\n\n# Use our adder function, then wire it up to the outputs.\nresult = adder(A_nets, B_nets)\nfor n1, n2 in zip(output_nets, result):\n    wire_together(n1, n2)\n',makeInputNets:function(e){return e.push({kind:"signal",net:"_net_A0",pattern:Object(c.a)("000111111111z"),repeat:!1},{kind:"signal",net:"_net_A1",pattern:Object(c.a)("000000000111z"),repeat:!1},{kind:"signal",net:"_net_A2",pattern:Object(c.a)("000000000000z"),repeat:!1},{kind:"signal",net:"_net_B0",pattern:Object(c.a)("000000111111z"),repeat:!1},{kind:"signal",net:"_net_B1",pattern:Object(c.a)("000000000000z"),repeat:!1},{kind:"signal",net:"_net_B2",pattern:Object(c.a)("000000000111z"),repeat:!1}),[["_net_A0","_net_A1","_net_A2"],["_net_B0","_net_B1","_net_B2"]]},makeOutputNets:function(){return["_net_sum0","_net_sum1","_net_sum2"]},gradeResults:function(e,t){return K(t,[{net:"_net_sum0",netName:"(A + B)[0]",reqs:X(e.clockDivider,"xx0xx1xx0xx0")},{net:"_net_sum1",netName:"(A + B)[1]",reqs:X(e.clockDivider,"xx0xx0xx1xx0")},{net:"_net_sum2",netName:"(A + B)[2]",reqs:X(e.clockDivider,"xx0xx0xx0xx0")}])},xStep:3,simSteps:400,clockDivider:10,tickSpacing:1},{internalName:"flipflops",name:"Flip-Flops",levelDesc:"Your goal is to implement three components that each store one bit of data:\n\nSet-reset latch (SR latch):\nThe SR latch has two inputs: set and reset, and two outputs: Q and \xacQ. When set is high and reset low, Q immediately goes high and \xacQ low. When reset is high and set is low, Q immediately goes low and \xacQ high. When both set and reset are both low the output state holds the last value.\n\nD flip-flop based register:\nThe register has two inputs, D and clk, and two outputs, Q and \xacQ. The register stores a single bit, which it outputs to Q and \xacQ at all times. The behavior is that on the rising edge of the clk signal the register samples D, and sets the bit of state equal to it.\n\n(Hint: You can use two SR latches to make this register.)\n\nDon't fret if your register can give the wrong output (or even enter funny states where the output oscillates) if the D signal changes too close to the rising clock edge. Your register will have a characteristic setup time and hold time:\n\n  Setup time: Min time that D must have its target value *before* the rising clock edge to avoid malfunction.\n  Hold time: Min time that D must hold its target value *after* the rising clock edge to avoid malfunction.\n",startingCode:'\ndef sr_latch(s, r):\n    q, not_q = new_net(), new_net()\n    ...\n    return q, not_q\n\ndef register(d, clk):\n    q, not_q = new_net(), new_net()\n    ...\n    return q, not_q\n\nset, reset, d, clk = get_level_inputs()\nq, not_q, register_out = get_level_outputs()\n\nfor a, b in zip(sr_latch(set, reset), (q, not_q)):\n    wire_together(a, b)\n\nwire_together(register(d, clk)[0], register_out)\n\nprobe("SR latch\'s set", set)\nprobe("SR latch\'s reset", reset)\nprobe("SR latch\'s Q", q)\nprobe("SR latch\'s \xacQ", not_q)\n\nprobe("Register\'s D", d)\nprobe("Register\'s clk", clk)\nprobe("Register\'s output", register_out)\n',makeInputNets:function(e){return e.push({kind:"signal",net:"_net_set",pattern:Object(c.a)("010000000100000"),repeat:!1},{kind:"signal",net:"_net_reset",pattern:Object(c.a)("000001000000010"),repeat:!1},{kind:"signal",net:"_net_d",pattern:Object(c.a)("0000011000000110"),repeat:!1},{kind:"signal",net:"_net_clk",pattern:Object(c.a)("00110011001100110"),repeat:!1}),["_net_set","_net_reset","_net_d","_net_clk"]},makeOutputNets:function(){return["_net_q","_net_not_q","_net_register_out"]},gradeResults:function(e,t){return K(t,[{net:"_net_q",netName:"SR latch's Q",reqs:X(e.clockDivider,"xx111x000x111x000")},{net:"_net_not_q",netName:"SR latch's \xacQ",reqs:X(e.clockDivider,"xx000x111x000x111")},{net:"_net_register_out",netName:"Register's output",reqs:X(e.clockDivider,"xxx000x111x000x11")}])},xStep:3,simSteps:400,clockDivider:10,tickSpacing:1},{internalName:"state_machine",name:"State Machines",levelDesc:'This level is much harder than all previous. Your goal will be to implement a circuit that takes in decimal digits one at a time over a serial bus, and output if the number is a multiple of seven. On each rising clock edge you must read the `reset` and `data_in` lines, and update your state and the output line. You will receive decimal digits as sets of four bits, encoded in big-endian, transmitted over four consecutive clock cycles.\n\nLet us use strings to represent possible inputs over the serial bus to your circuit. We will denote a cycle in which `reset` is high by "R", and otherwise denote the value of `data_in` by either "0", or "1". Therefore, "R0000" will denote the input in which the clock has five rising edges, the first where `reset` is high (and therefore `data_in`\'s value doesn\'t matter), and the remaining where `reset` is low and `data_in` is low.\n\nThis input of "R0000" would correspond to feeding in just the single decimal digit 0 to our circuit. After receiving this input the output `div7` must be high. Likewise, the input of "R00010111" would correspond to feeding in the decimal digits 1, then 7, representing the number 17. This is not a multiple of seven, so `div7` would be required to be low after this input.\n\nAs another example, if fed "R0001R0111" your circuit must set `div7` low after the first digit is ingested, but then must set `div7` high at the very end, because the second reset throws away the first 1 digit. Therefore, the number being processed at the very end is just 7, not 17.\n\nYour circuit must work for arbitrarily large numbers. You will only be graded on your output after each complete digit is fed in, and you won\'t be graded on your output before any digits are fed in or before the first reset. Nor will you be graded on inputs like "R1010" that use invalid digits.\n\nThe test cases being fed in are:\n0 (yes)\n1 (no)\n7 (yes)\n14 (no (after just the first digit has been fed in), then yes)\n17 (no, then no)\n791 (yes, then no, then yes)\n',startingCode:'\nclk, reset, data_in = get_level_inputs()\ndiv7, = get_level_outputs()\n\nprobe("Clock", clk)\nprobe("Reset", reset)\nprobe("Data in", data_in)\nprobe("Divisible by 7?", div7)\n',makeInputNets:function(e){return e.push({kind:"signal",net:"_net_clk",pattern:Object(c.a)("01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101z"),repeat:!1},{kind:"signal",net:"_net_reset",pattern:Object(c.a)("11000000001100000000110000000011000000000000000011000000000000000011000000000000000000000000z"),repeat:!1},{kind:"signal",net:"_net_data_in",pattern:Object(c.a)("zz00000000zz00000011zz00111111zz0000001100110000zz0000001100111111zz001111111100001100000011z"),repeat:!1}),["_net_clk","_net_reset","_net_data_in"]},makeOutputNets:function(){return["_net_div7"]},gradeResults:function(e,t){return K(t,[{net:"_net_div7",netName:"Divisible by 7?",reqs:X(e.clockDivider,"xxxxxxxxx1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"),failureMessages:["The input being tested at this point is 0, which is divisible by seven","0 is divisible"]},{net:"_net_div7",netName:"Divisible by 7?",reqs:X(e.clockDivider,"xxxxxxxxxxxxxxxxxxx0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"),failureMessages:["The input being tested at this point is 1, which is not divisible by seven","1 is not divisible"]},{net:"_net_div7",netName:"Divisible by 7?",reqs:X(e.clockDivider,"xxxxxxxxxxxxxxxxxxxxxxxxxxxxx1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"),failureMessages:["The input being tested at this point is 7, which is divisible by seven","7 is divisible"]},{net:"_net_div7",netName:"Divisible by 7?",reqs:X(e.clockDivider,"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"),failureMessages:["The input being tested at this point is 1 (just the first digit of 14), which is not divisible by seven","1 is not divisible"]},{net:"_net_div7",netName:"Divisible by 7?",reqs:X(e.clockDivider,"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"),failureMessages:["The input being tested at this point is 14, which is divisible by seven","14 is divisible"]},{net:"_net_div7",netName:"Divisible by 7?",reqs:X(e.clockDivider,"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"),failureMessages:["The input being tested at this point is 1 (just the first digit of 17), which is not divisible by seven","1 is not divisible"]},{net:"_net_div7",netName:"Divisible by 7?",reqs:X(e.clockDivider,"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0xxxxxxxxxxxxxxxxxxxxxxxxxx"),failureMessages:["The input being tested at this point is 17, which is not divisible by seven","17 is not divisible"]},{net:"_net_div7",netName:"Divisible by 7?",reqs:X(e.clockDivider,"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1xxxxxxxxxxxxxxxx"),failureMessages:["The input being tested at this point is 7 (just the first digit of 791), which is divisible by seven","7 is divisible"]},{net:"_net_div7",netName:"Divisible by 7?",reqs:X(e.clockDivider,"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0xxxxxxxx"),failureMessages:["The input being tested at this point is 79 (just the first two digits of 791), which is not divisible by seven","79 is not divisible"]},{net:"_net_div7",netName:"Divisible by 7?",reqs:X(e.clockDivider,"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1"),failureMessages:["The input being tested at this point is 791, which is divisible by seven","791 is divisible"]}])},xStep:.3,simSteps:3e3,clockDivider:30,tickSpacing:2},{internalName:"sram",name:"SRAM",levelDesc:"This level isn't complete yet. Come back later.",startingCode:"# Your code here.\n",makeInputNets:function(){return["_net_A","_net_output_enable"]},makeOutputNets:function(){return["_net_notA"]},gradeResults:function(e){return{success:!1,failureTime:3,message:"bad",miniMessage:"?"}},xStep:1,simSteps:400,clockDivider:10,tickSpacing:1},{internalName:"microprocessor",name:"Microprocessor",levelDesc:"This is the first level.\nTo open up the documentation press ",startingCode:"# Your code here.\n",makeInputNets:function(){return["_net_A","_net_output_enable"]},makeOutputNets:function(){return["_net_notA"]},gradeResults:function(e){return{success:!1,failureTime:3,message:"bad",miniMessage:"?"}},xStep:1,simSteps:400,clockDivider:10,tickSpacing:1}],te=function(e){Object(l.a)(n,e);var t=Object(x.a)(n);function n(e){var i;Object(h.a)(this,n),(i=t.call(this,e)).levelStates=void 0,i.onCompile=function(e){var t=window.Sk;t.pre="output";var n=[],r=[],a=0;function s(){return(++a).toString()}t.builtins.vdd=t.ffi.remapToPy("vdd"),t.builtins.gnd=t.ffi.remapToPy("gnd"),t.builtins.new_net=function(e){return t.ffi.remapToJs(e)+s()},t.builtins.new_net.co_varnames=["name"],t.builtins.new_net.$defaults=["net"],t.builtins.new_net.co_numargs=1,t.builtins.nfet=function(e,n,i){if(void 0===e||void 0===n)throw"nfet must be called like nfet(gate, drain, source) or like nfet(gate, drain) with source implicitly being gnd";if(e=t.ffi.remapToJs(e),n=t.ffi.remapToJs(n),void 0===(i=t.ffi.remapToJs(i))&&(i="gnd"),"string"!==typeof e)throw"nfet(gate, drain, source) gate argument must be net";if("string"!==typeof n)throw"nfet(gate, drain, source) drain argument must be net";if("string"!==typeof i)throw"nfet(gate, drain, source) source argument must be net";r.push({kind:"fet",isPfet:!1,gate:e,drain:n,source:i})},t.builtins.nfet.co_varnames=["gate","drain","source"],t.builtins.nfet.$defaults=[void 0,void 0,void 0],t.builtins.nfet.co_numargs=3,t.builtins.pfet=function(e,n,i){if(void 0===e||void 0===n)throw"pfet must be called like pfet(gate, drain, source) or like pfet(gate, drain) with source implicitly being vdd";if(e=t.ffi.remapToJs(e),n=t.ffi.remapToJs(n),void 0===(i=t.ffi.remapToJs(i))&&(i="vdd"),"string"!==typeof e)throw"pfet(gate, drain, source) gate argument must be net";if("string"!==typeof n)throw"pfet(gate, drain, source) drain argument must be net";if("string"!==typeof i)throw"pfet(gate, drain, source) source argument must be net";r.push({kind:"fet",isPfet:!0,gate:e,drain:n,source:i})},t.builtins.pfet.co_varnames=["gate","drain","source"],t.builtins.pfet.$defaults=[void 0,void 0,void 0],t.builtins.pfet.co_numargs=3,t.builtins.probe=function(e,n){if(e=t.ffi.remapToJs(e),n=t.ffi.remapToJs(n),"string"!==typeof e)throw"probe(label, net) label argument must be string";if("string"!==typeof n)throw"probe(label, net) net argument must be string";r.push({kind:"probe",label:e,net:n})},t.builtins.probe.co_varnames=["label","net"],t.builtins.probe.co_numargs=2,t.builtins.pull_down_resistor=function(e){if("string"!==typeof(e=t.ffi.remapToJs(e)))throw"pull_down_resistor(net) net argument must be string";r.push({kind:"pull_resistor",direction:"down",net:e})},t.builtins.pull_down_resistor.co_varnames=["net"],t.builtins.pull_down_resistor.co_numargs=1,t.builtins.pull_up_resistor=function(e){if("string"!==typeof(e=t.ffi.remapToJs(e)))throw"pull_up_resistor(net) net argument must be string";r.push({kind:"pull_resistor",direction:"up",net:e})},t.builtins.pull_up_resistor.co_varnames=["net"],t.builtins.pull_up_resistor.co_numargs=1,t.builtins.wire_together=function(e,n){if(e=t.ffi.remapToJs(e),n=t.ffi.remapToJs(n),"string"!==typeof e)throw"wire_together(net1, net2) net1 argument must be string";if("string"!==typeof n)throw"wire_together(net1, net2) net2 argument must be string";r.push({kind:"wire",nets:[e,n]})},t.builtins.wire_together.co_varnames=["net1","net2"],t.builtins.wire_together.co_numargs=2,t.builtins.signal=function(e,n){var i=t.ffi.remapToJs(n)+s();if(void 0===e)throw'signal must take pattern, like: signal("01...")';var a=(e=t.ffi.remapToJs(e).toLowerCase()).endsWith("...");a&&(e=e.slice(0,-3));var o,l=Object(d.a)(e);try{for(l.s();!(o=l.n()).done;){var x=o.value;if("0"!==x&&"1"!==x&&"z"!==x)throw"The pattern must be made of 0s, 1s and zs, and may optionally end with ... to indicate that the pattern should repeat."}}catch(c){l.e(c)}finally{l.f()}return r.push({kind:"signal",net:i,pattern:e,repeat:a}),t.ffi.remapToPy(i)},t.builtins.signal.co_varnames=["desc","name"],t.builtins.signal.$defaults=[void 0,"signal"],t.builtins.signal.co_numargs=2,t.builtins.get_level_inputs=function(){var e=i.state.currentLevel.makeInputNets(r);return t.ffi.remapToPy(e)},t.builtins.get_level_inputs.co_varnames=[],t.builtins.get_level_inputs.co_numargs=0,t.builtins.get_level_outputs=function(){var e=i.state.currentLevel.makeOutputNets(r);return t.ffi.remapToPy(e)},t.builtins.get_level_outputs.co_varnames=[],t.builtins.get_level_outputs.co_numargs=0,t.configure({output:function(e){n.push(e.toString())},read:H}),t.misceval.asyncToPromise((function(){return t.importMainWithBody("<stdin>",!1,e,!0)})).then((function(e){var t=n.join("");t&&!t.endsWith("\n")&&(t+="\n"),i.setState({terminalOutput:t,paneColor:"#222"}),i.simulate(r)}),(function(e){i.setState({terminalOutput:n.join("")+"\n"+e.toString(),simOutput:"",paneColor:"#433"})}))},i.levelStates=new Map,i.loadLevelStatesFromLocalStorage(),i.state={page:"level-select",currentLevel:null,code:"",terminalOutput:"",simOutput:"",simResults:null,grading:null,paneColor:"#222",docsOpen:!1,cheatMode:!1},window.onpopstate=function(e){i.navigateBack()};var r=0,a="unlock";return document.addEventListener("keydown",(function(e){e.key===a[r]?++r>=a.length&&i.setState({cheatMode:!0}):r=0})),i}return Object(p.a)(n,[{key:"loadLevelStatesFromLocalStorage",value:function(){this.levelStates=new Map;var e,t=Object(d.a)(ee);try{for(t.s();!(e=t.n()).done;){var n=e.value,i=JSON.parse(localStorage.getItem("level-"+n.internalName+"-meta")||'{"savedVersion": 1, "everBeaten": false, "everOpened": false}'),r=localStorage.getItem("level-"+n.internalName+"-saved-code")||n.startingCode;this.levelStates.set(n.internalName,{metadata:i,code:r})}}catch(a){t.e(a)}finally{t.f()}}},{key:"reportError",value:function(e,t){var n=this.state.code.split("\n")[e-1];this.setState({terminalOutput:"  ".concat(n,"\n\nError on line ").concat(e,": ").concat(t)})}},{key:"simulate",value:function(e){var t=performance.now();e=[].concat(Object(c.a)(e),[{kind:"signal",net:"vdd",pattern:["1"],repeat:!1},{kind:"signal",net:"gnd",pattern:["0"],repeat:!1}]);var n,i=new Set(["vdd","gnd"]),r=[],a=new $,s=Object(d.a)(e);try{for(s.s();!(n=s.n()).done;){var o=n.value;switch(o.kind){case"fet":for(var l=0,x=[o.gate,o.drain,o.source];l<x.length;l++){var u=x[l];i.add(u)}break;case"wire":var h,p=Object(d.a)(o.nets);try{for(p.s();!(h=p.n()).done;){var g=h.value;i.add(g)}}catch(G){p.e(G)}finally{p.f()}a.union.apply(a,Object(c.a)(o.nets));break;case"probe":r.push(o),i.add(o.net);break;case"pull_resistor":case"button":case"signal":i.add(o.net)}}}catch(G){s.e(G)}finally{s.f()}if(Z){var f,m=[],b=new Map,v=Object(d.a)(i);try{for(v.s();!(f=v.n()).done;){var _=f.value,y=a.canonicalize(_);b.has(y)||b.set(y,b.size),b.set(_,b.get(y))}}catch(G){v.e(G)}finally{v.f()}var w,k=Object(d.a)(e);try{for(k.s();!(w=k.n()).done;){var j=w.value;switch(j.kind){case"fet":m.push(1,+j.isPfet,b.get(j.gate),b.get(j.drain),b.get(j.source));break;case"signal":m.push.apply(m,[2,b.get(j.net),+j.repeat,j.pattern.length].concat(Object(c.a)(Object(c.a)(j.pattern).map((function(e){return{0:0,1:1,z:2}[e]})))));break;case"pull_resistor":m.push(3,{up:0,down:1}[j.direction],b.get(j.net));break;default:continue}m.push(123456789)}}catch(G){k.e(G)}finally{k.f()}for(var O=L(new Uint32Array(m),b.size,this.state.currentLevel.simSteps,this.state.currentLevel.clockDivider),S=B(),z=[],A=!1,N=1/0,T=0;T<S.length;T+=2){var D,C=S[T],M=S[T+1],q=O.slice(C,C+M),R=0,I=Object(d.a)(q);try{for(I.s();!(D=I.n()).done;){3==D.value&&(A=!0,N=Math.min(N,R)),R++}}catch(G){I.e(G)}finally{I.f()}z.push(q)}var P,W=new Map,F=Object(d.a)(i);try{for(F.s();!(P=F.n()).done;){var E=P.value;W.set(E,z[b.get(E)])}}catch(G){F.e(G)}finally{F.f()}var J=performance.now()-t,Y="------- Simulation completed in: ".concat(Math.round(J),"ms (Components: ").concat(e.length-2," Nets: ").concat(i.size,")"),U={components:e.length,nets:Object(c.a)(i),netTraces:W,probes:r,shootThroughOccurred:A,earliestShootThrough:N},Q=A?{success:!1,failureTime:N,message:"Shoot through (shorting vdd to gnd) is never allowed.",miniMessage:"Shoot through occurs here"}:this.state.currentLevel.gradeResults(this.state.currentLevel,U);if(Q.success){var H=this.levelStates.get(this.state.currentLevel.internalName);H.metadata.everBeaten=!0,V(this.state.currentLevel.internalName,H),this.setState({paneColor:"#343"})}else Y+="\n\nLEVEL FAILED: "+Q.message;this.setState({simOutput:Y,simResults:U,grading:Q})}else this.setState({simOutput:"Wasm component not initialized."})}},{key:"switchToLevel",value:function(e){this.setState({page:"level",currentLevel:e,code:this.levelStates.get(e.internalName).code,terminalOutput:"",simOutput:"(Hit ctrl + enter in the code window to rerun.)",simResults:null,grading:null,paneColor:"#222"});var t=this.levelStates.get(e.internalName);t.metadata.everOpened=!0,V(e.internalName,t),window.history.pushState({page:"level",currentLevel:e.internalName},"Make a Microprocessor")}},{key:"getIsUnsaved",value:function(){return this.state.code!==this.levelStates.get(this.state.currentLevel.internalName).code}},{key:"navigateBack",value:function(){this.getIsUnsaved()&&!window.confirm("Exit level without saving work? (Just hit ctrl+s in the code editor.)")||this.setState({page:"level-select"})}},{key:"render",value:function(){var e=this;if("level-select"===this.state.page){var t=!1;return Object(Q.jsxs)("div",{style:{width:"100%",height:"100vh",color:"white",fontFamily:"monospace",display:"flex",justifyContent:"center",textAlign:"center",fontSize:"150%"},children:[Object(Q.jsxs)("div",{style:{marginTop:30},children:[Object(Q.jsx)("span",{style:{fontSize:"200%"},children:"Make a Microprocessor"}),Object(Q.jsx)("br",{}),Object(Q.jsx)("br",{}),"Select a level:",Object(Q.jsx)("br",{}),Object(Q.jsx)("div",{style:{display:"inline-block"},children:Object(Q.jsx)("div",{style:{display:"flex",flexDirection:"column",marginTop:20},children:ee.map((function(n,i){var r=e.levelStates.get(n.internalName),a=Object(Q.jsxs)("div",{style:{fontSize:"120%",margin:5,padding:10,width:300,position:"relative"},className:t?"lockedButton":"hoverButton",onClick:t?function(){return null}:function(){return e.switchToLevel(n)},children:[t?"???":n.name,!t&&!r.metadata.everOpened&&Object(Q.jsx)("div",{style:{position:"absolute",fontSize:"80%",color:"red",left:"92%",top:"0%",transform:"rotate(30deg)"},children:"New!"}),r.metadata.everBeaten&&Object(Q.jsx)("div",{style:{position:"absolute",fontSize:"300%",color:"green",left:"100%",top:"50%",transform:"translate(-50%, -50%)"},children:"\u2713"})]},i);return r.metadata.everBeaten||e.state.cheatMode||(t=!0),a}))})})]}),Object(Q.jsx)("div",{style:{position:"absolute",left:10,bottom:10},children:"By Peter Schmidt-Nielsen (v0.3b)"}),Object(Q.jsx)("div",{style:{position:"absolute",right:10,bottom:10,padding:10},className:"hoverButton",onClick:function(){window.confirm("Are you sure you want to completely reset the game state, including throwing away all of your code?")&&(localStorage.clear(),e.loadLevelStatesFromLocalStorage(),e.forceUpdate())},children:"Reset Entire Game State"})]})}var n,i=parseInt(localStorage.getItem("split1")||"500");parseInt(localStorage.getItem("split2")||"400");return Object(Q.jsxs)("div",{style:{display:"flex"},children:[Object(Q.jsxs)(b.a,{split:"vertical",minSize:300,defaultSize:i,onChange:function(e){return localStorage.setItem("split1",e.toString())},resizerStyle:{background:"black",width:"3px",minWidth:"3px",cursor:"col-resize",height:"100%",zIndex:20},children:[Object(Q.jsxs)("div",{style:{position:"relative"},children:[Object(Q.jsxs)("div",{style:{display:"flex",alignItems:"center",background:"#444",borderBottom:"2px solid #222",height:60},children:[Object(Q.jsx)("div",{style:{bottom:10,right:70},className:"mainButton",onClick:function(){return e.navigateBack()},children:"\u276e"}),Object(Q.jsx)("div",{style:{bottom:10,right:10},className:"mainButton",onClick:function(){return e.setState({docsOpen:!e.state.docsOpen})},children:"Parts List"}),Object(Q.jsx)("div",{style:{bottom:10,right:10},className:"mainButton",onClick:function(){window.confirm("Throw away your code and reset to the level's starting code?")&&e.setState({code:e.state.currentLevel.startingCode})},children:"Reset code"})]}),Object(Q.jsx)(g.Controlled,{value:this.state.code,options:(n=this.onCompile,{mode:"python",theme:"material",lineNumbers:!0,indentUnit:4,lineWrapping:!0,extraKeys:{"Ctrl-Enter":function(t){n(e.state.code)},"Ctrl-S":function(t){var n=e.levelStates.get(e.state.currentLevel.internalName);n.code=e.state.code,V(e.state.currentLevel.internalName,n),e.forceUpdate()}}}),onBeforeChange:function(t,n,i){e.setState({code:i})}}),this.getIsUnsaved()&&Object(Q.jsx)("div",{style:{position:"absolute",right:20,bottom:20,userSelect:"none",pointerEvents:"none",zIndex:5,color:"red",opacity:.5},children:"\u2b24 Unsaved (ctrl + s to save)"})]}),Object(Q.jsx)("div",{children:Object(Q.jsxs)("div",{style:{display:"flex",flexDirection:"column"},children:[Object(Q.jsx)("div",{style:{width:"100%",height:"60vh",backgroundColor:"#333",color:"white",fontFamily:"monospace",overflow:"scroll"},children:Object(Q.jsx)("div",{style:{margin:10},children:null!==this.state.simResults&&G(this.state.currentLevel,this.state.simResults,this.state.grading)})}),Object(Q.jsxs)("div",{style:{backgroundColor:this.state.paneColor,color:"white",fontFamily:"monospace",width:"100%",height:"40vh",display:"flex"},children:[Object(Q.jsxs)("div",{style:{padding:10,width:500,backgroundColor:"#222",overflowY:"scroll"},children:[Object(Q.jsx)("b",{children:this.state.currentLevel.name}),Object(Q.jsx)("p",{style:{whiteSpace:"pre-wrap"},children:this.state.currentLevel.levelDesc})]}),Object(Q.jsx)("div",{style:{width:2,backgroundColor:"#555"}}),Object(Q.jsxs)("div",{style:{margin:10,whiteSpace:"pre-wrap",color:"white",overflow:"scroll",width:"100%"},children:[this.state.terminalOutput&&Object(Q.jsxs)(Q.Fragment,{children:["Python output:",Object(Q.jsx)("br",{}),Object(Q.jsx)("span",{style:{color:"lightblue"},children:this.state.terminalOutput}),Object(Q.jsx)("br",{}),Object(Q.jsx)("br",{})]}),this.state.simOutput]})]})]})})]}),"#343"===this.state.paneColor&&Object(Q.jsx)("div",{style:{position:"absolute",right:30,bottom:30,padding:20,fontSize:"400%",boxShadow:"0px 0px 50px green"},className:"hoverButton",onClick:function(){e.navigateBack()},children:"You win!"}),Object(Q.jsxs)("div",{style:{position:"absolute",width:800,height:"100%",boxSizing:"border-box",boxShadow:"0px 0px 10px black",right:this.state.docsOpen?810:0,zIndex:100,backgroundColor:"#aaa",transition:"0.2s right",padding:10,transform:"translate(810px, 0px)",overflowY:"scroll"},children:[Object(Q.jsx)("div",{style:{position:"sticky",top:0},children:Object(Q.jsx)("div",{style:{position:"absolute",top:5,right:5,fontSize:"120%",padding:4},className:"hoverButton",onClick:function(){return e.setState({docsOpen:!1})},children:"\u2715"})}),Object(Q.jsx)("span",{style:{fontSize:"150%",fontWeight:"bold"},children:"Parts list"}),Object(Q.jsxs)("p",{children:['The code area is "Python". Hit ctrl + enter in the code area to rerun it, and hit ctrl + s to save your code. I provide functions that construct circuit components as a side effect. The four functions you need to use to assemble your circuit are:',Object(Q.jsxs)("div",{style:{marginLeft:20,marginBottom:20},children:[Object(Q.jsx)("pre",{style:{fontWeight:"bold",fontSize:"120%"},children:"nfet(gate: Net, drain: Net, source: Optional[Net])"}),Object(Q.jsxs)("div",{style:{marginLeft:20},children:["Constructs an n-channel FET in the circuit. The behavior is:",Object(Q.jsx)("pre",{style:{marginLeft:20},children:"if gate is high and source is low:\n    drive drain low"}),"If the source argument is omitted it defaults to ",Object(Q.jsx)("code",{children:"gnd"})," (always low). Examples:",Object(Q.jsx)("pre",{style:{marginLeft:20},children:"# Pulls `output` down whenever `gate` is high.\nnfet(gate, output, gnd)\n\n# This is equivalent to the above, as gnd is implicit.\nnfet(gate, output)\n\n# Here two nfets are wired in series. Thus, `output` is\n# pulled down when both `gate1` and `gate2` are high.\nintermediate = new_net()\nnfet(gate1, intermediate)\nnfet(gate2, output, intermediate)"}),"There is no modeled body diode, so the FET simply does nothing (doesn't conduct) if source is high and drain is low (pass transistor logic is not allowed). Additionally, no gate capacitance is modeled \u2014 all nets that aren't driven return to a floating state which doesn't switch FETs on."]}),Object(Q.jsx)("pre",{style:{fontWeight:"bold",fontSize:"120%"},children:"pfet(gate: Net, drain: Net, source: Optional[Net])"}),Object(Q.jsxs)("div",{style:{marginLeft:20},children:["Constructs a p-channel FET in the circuit. The behavior is:",Object(Q.jsx)("pre",{style:{marginLeft:20},children:"if gate is low and source is high:\n    drive drain high"}),"If the source argument is omitted it defaults to ",Object(Q.jsx)("code",{children:"vdd"})," (always high). Again, there is no modeled body diode or gate capacitance."]}),Object(Q.jsx)("pre",{style:{fontWeight:"bold",fontSize:"120%"},children:"new_net() -> Net"}),Object(Q.jsx)("div",{style:{marginLeft:20},children:"Creates a new unique net (electrical node in your circuit), and returns it."}),Object(Q.jsx)("pre",{style:{fontWeight:"bold",fontSize:"120%"},children:"wire_together(net1: Net, net2: Net)"}),Object(Q.jsx)("div",{style:{marginLeft:20},children:"Connect two nets together so that they are electrically equivalent."})]}),"I provide two additional functions for debugging and testing purposes:",Object(Q.jsxs)("div",{style:{marginLeft:20,marginBottom:20},children:[Object(Q.jsx)("pre",{style:{fontWeight:"bold",fontSize:"120%"},children:"probe(label: str, net: Net)"}),Object(Q.jsx)("div",{style:{marginLeft:20},children:"Causes a net's voltage to be plotted in the simulation results pane (top right)."}),Object(Q.jsx)("pre",{style:{fontWeight:"bold",fontSize:"120%"},children:"signal(pattern: str) -> Net"}),Object(Q.jsxs)("div",{style:{marginLeft:20},children:["Constructs a signal generator component, and returns the generator's output net. The pattern string must be made of 0s, 1s, and zs, and may optionally end with ... to indicate that the pattern should repeat. The value z indicates that the signal generator shouldn't drive the output (high Z). Examples:",Object(Q.jsx)("pre",{style:{marginLeft:20},children:"# Creates a clock signal that toggles every time step.\nclock = signal('01...')\n\n# The signal waits three time steps, then drives high,\n# then stops driving forever.\noutput = signal('zzz1z')"})]})]})]})]})]})}}]),n}(a.a.PureComponent),ne=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,37)).then((function(t){var n=t.getCLS,i=t.getFID,r=t.getFCP,a=t.getLCP,s=t.getTTFB;n(e),i(e),r(e),a(e),s(e)}))};o.a.render(Object(Q.jsx)(a.a.StrictMode,{children:Object(Q.jsx)(te,{})}),document.getElementById("root")),ne()}},[[36,1,2]]]);
//# sourceMappingURL=main.9124933d.chunk.js.map